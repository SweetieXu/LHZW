//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Asiatek.TMS.TerminalOperation {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuerySpecifiedTerminalParasData", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.TerminalManagement")]
    [System.SerializableAttribute()]
    public partial class QuerySpecifiedTerminalParasData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private Asiatek.TMS.TerminalOperation.TerminalParaID[] TerminalParaIDsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public Asiatek.TMS.TerminalOperation.TerminalParaID[] TerminalParaIDs {
            get {
                return this.TerminalParaIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.TerminalParaIDsField, value) != true)) {
                    this.TerminalParaIDsField = value;
                    this.RaisePropertyChanged("TerminalParaIDs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TerminalParaID", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.TerminalManagement")]
    public enum TerminalParaID : uint {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        终端心跳发送间隔 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TCP消息应答超时时间 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TCP消息重传次数 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UDP消息应答超时时间 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UDP消息重传次数 = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SMS消息应答超时时间 = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SMS消息重传次数 = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        主服务器APN或PPP拨号号码 = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        主服务器无线通信拨号用户名 = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        主服务器无线通信拨号密码 = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        主服务器IP地址或域名 = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        备份服务器APN = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        备份服务器无线通信拨号用户名 = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        备份服务器无线通信拨号密码 = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        备份服务器IP地址或域名 = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        服务器TCP端口 = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        服务器UDP端口 = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        道路运输证IC卡认证主服务器IP地址或域名 = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        道路运输证IC卡认证主服务器TCP端口 = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        道路运输证IC卡认证主服务器UDP端口 = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        道路运输证IC卡认证备份服务器IP地址或域名 = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        位置汇报策略 = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        位置汇报方案 = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        驾驶员未登录汇报时间间隔 = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        休眠时汇报时间间隔 = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        紧急报警时汇报时间间隔 = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        缺省时间汇报间隔 = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        缺省距离汇报间隔 = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        驾驶员未登录汇报距离间隔 = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        休眠时汇报距离间隔 = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        紧急报警时汇报距离间隔 = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        拐点补传角度 = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        电子围栏半径 = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        监控平台电话号码 = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        复位电话号码 = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        恢复出厂设置电话号码 = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        监控平台SMS电话号码 = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        接收终端SMS文本报警号码 = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        终端电话接听策略 = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        每次最长通话时间 = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        当月最长通话时间 = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        监听电话号码 = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        监管平台特权短信号码 = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        报警屏蔽字 = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        报警发送文本SMS开关 = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        报警拍摄开关 = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        报警拍摄存储标志 = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        关键标志 = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        最高速度 = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        超速持续时间 = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        连续驾驶时间门限 = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        当天累计驾驶时间门限 = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        最小休息时间 = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        最长停车时间 = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        超速报警预警差值 = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        疲劳驾驶预警差值 = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        碰撞报警参数设置 = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        侧翻报警参数设置 = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        定时拍照控制 = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        定距拍照控制 = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        图像或视频质量 = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        亮度 = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        对比度 = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        饱和度 = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        色度 = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        车辆里程表读数 = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        车辆所在的省域ID = 129,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        车辆所在的市域ID = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        公安交通管理部门颁发的机动车号牌 = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        车牌颜色 = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GNSS定位模式 = 144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GNSS波特率 = 145,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GNSS模块详细定位数据输出频率 = 146,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GNSS模块详细定位数据采集频率 = 147,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GNSS模块详细定位数据上传方式 = 148,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GNSS模块详细定位数据上传设置 = 149,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CAN总线通道1采集时间间隔 = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CAN总线通道1上传时间间隔 = 257,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CAN总线通道2采集时间间隔 = 258,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CAN总线通道2上传时间间隔 = 259,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CAN总线ID单独采集设置 = 272,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultQueryTerminalParaRespData", Namespace="http://schemas.datacontract.org/2004/07/STDServiceCore")]
    [System.SerializableAttribute()]
    public partial class OperationResultQueryTerminalParaRespData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private Asiatek.TMS.TerminalOperation.OperationResultCode CodeField;
        
        private string MessageField;
        
        private Asiatek.TMS.TerminalOperation.QueryTerminalParaRespData ResultDataField;
        
        private bool StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Asiatek.TMS.TerminalOperation.OperationResultCode Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Asiatek.TMS.TerminalOperation.QueryTerminalParaRespData ResultData {
            get {
                return this.ResultDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultDataField, value) != true)) {
                    this.ResultDataField = value;
                    this.RaisePropertyChanged("ResultData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryTerminalParaRespData", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.TerminalManagement")]
    [System.SerializableAttribute()]
    public partial class QueryTerminalParaRespData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Asiatek.TMS.TerminalOperation.TerminalParasData ParaItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte ParasCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort SerialNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Asiatek.TMS.TerminalOperation.TerminalParasData ParaItems {
            get {
                return this.ParaItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ParaItemsField, value) != true)) {
                    this.ParaItemsField = value;
                    this.RaisePropertyChanged("ParaItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte ParasCount {
            get {
                return this.ParasCountField;
            }
            set {
                if ((this.ParasCountField.Equals(value) != true)) {
                    this.ParasCountField = value;
                    this.RaisePropertyChanged("ParasCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((this.SerialNumberField.Equals(value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultCode", Namespace="http://schemas.datacontract.org/2004/07/STDServiceCore")]
    public enum OperationResultCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        操作成功 = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        终端号格式有误 = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        终端号不存在 = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        未知错误 = 199,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        终端离线 = 200,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        终端通讯异常 = 201,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        等待应答超时 = 202,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TerminalParasData", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.TerminalManagement")]
    [System.SerializableAttribute()]
    public partial class TerminalParasData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Nullable<ushort> CAN总线通道1上传时间间隔Field;
        
        private System.Nullable<uint> CAN总线通道1采集时间间隔Field;
        
        private System.Nullable<ushort> CAN总线通道2上传时间间隔Field;
        
        private System.Nullable<uint> CAN总线通道2采集时间间隔Field;
        
        private System.Nullable<Asiatek.TMS.TerminalOperation.GNSSPositioningMode> GNSS定位模式Field;
        
        private System.Nullable<Asiatek.TMS.TerminalOperation.GNSSUploadWay> GNSS模块详细定位数据上传方式Field;
        
        private System.Nullable<uint> GNSS模块详细定位数据上传设置Field;
        
        private System.Nullable<Asiatek.TMS.TerminalOperation.GNSSOutputFrequency> GNSS模块详细定位数据输出频率Field;
        
        private System.Nullable<uint> GNSS模块详细定位数据采集频率Field;
        
        private System.Nullable<Asiatek.TMS.TerminalOperation.GNSSBaudRate> GNSS波特率Field;
        
        private System.Nullable<uint> SMS消息应答超时时间Field;
        
        private System.Nullable<uint> SMS消息重传次数Field;
        
        private System.Nullable<uint> TCP消息应答超时时间Field;
        
        private System.Nullable<uint> TCP消息重传次数Field;
        
        private System.Nullable<uint> UDP消息应答超时时间Field;
        
        private System.Nullable<uint> UDP消息重传次数Field;
        
        private string 主服务器APN或PPP拨号号码Field;
        
        private string 主服务器IP地址或域名Field;
        
        private string 主服务器无线通信拨号密码Field;
        
        private string 主服务器无线通信拨号用户名Field;
        
        private System.Nullable<uint> 亮度Field;
        
        private System.Nullable<uint> 休眠时汇报时间间隔Field;
        
        private System.Nullable<uint> 休眠时汇报距离间隔Field;
        
        private System.Nullable<Asiatek.TMS.TerminalOperation.LocationReportingProgram> 位置汇报方案Field;
        
        private System.Nullable<Asiatek.TMS.TerminalOperation.LocationReportingStrategy> 位置汇报策略Field;
        
        private System.Nullable<ushort> 侧翻报警参数设置Field;
        
        private string 公安交通管理部门颁发的机动车号牌Field;
        
        private System.Nullable<Asiatek.TMS.TerminalOperation.AlarmFlag> 关键标志Field;
        
        private System.Nullable<uint> 图像或视频质量Field;
        
        private string 备份服务器APNField;
        
        private string 备份服务器IP地址或域名Field;
        
        private string 备份服务器无线通信拨号密码Field;
        
        private string 备份服务器无线通信拨号用户名Field;
        
        private string[] 复位电话号码Field;
        
        private System.Nullable<Asiatek.TMS.TerminalOperation.TimedTakingPictureControl> 定时拍照控制Field;
        
        private System.Nullable<ushort> 定时时间间隔Field;
        
        private System.Nullable<Asiatek.TMS.TerminalOperation.DependOnDistanceTakingPictureControl> 定距拍照控制Field;
        
        private System.Nullable<ushort> 定距距离间隔Field;
        
        private System.Nullable<uint> 对比度Field;
        
        private System.Nullable<uint> 当天累计驾驶时间门限Field;
        
        private System.Nullable<uint> 当月最长通话时间Field;
        
        private string[] 恢复出厂设置电话号码Field;
        
        private System.Nullable<Asiatek.TMS.TerminalOperation.AlarmFlag> 报警发送文本SMS开关Field;
        
        private System.Nullable<Asiatek.TMS.TerminalOperation.AlarmFlag> 报警屏蔽字Field;
        
        private System.Nullable<Asiatek.TMS.TerminalOperation.AlarmFlag> 报警拍摄存储标志Field;
        
        private System.Nullable<Asiatek.TMS.TerminalOperation.AlarmFlag> 报警拍摄开关Field;
        
        private System.Nullable<uint> 拐点补传角度Field;
        
        private string[] 接收终端SMS文本报警号码Field;
        
        private System.Nullable<uint> 最小休息时间Field;
        
        private System.Nullable<uint> 最长停车时间Field;
        
        private System.Nullable<uint> 最高速度Field;
        
        private System.Nullable<uint> 服务器TCP端口Field;
        
        private System.Nullable<uint> 服务器UDP端口Field;
        
        private System.Nullable<uint> 每次最长通话时间Field;
        
        private System.Nullable<ushort> 电子围栏半径Field;
        
        private System.Nullable<ushort> 疲劳驾驶预警差值Field;
        
        private string[] 监听电话号码Field;
        
        private string[] 监控平台SMS电话号码Field;
        
        private string[] 监控平台电话号码Field;
        
        private string[] 监管平台特权短信号码Field;
        
        private System.Nullable<Asiatek.TMS.TerminalOperation.CollisionAlarmPara> 碰撞报警参数设置Field;
        
        private System.Nullable<uint> 紧急报警时汇报时间间隔Field;
        
        private System.Nullable<uint> 紧急报警时汇报距离间隔Field;
        
        private System.Nullable<uint> 终端心跳发送间隔Field;
        
        private System.Nullable<Asiatek.TMS.TerminalOperation.TerminalPhoneAnsweringStrategy> 终端电话接听策略Field;
        
        private System.Nullable<uint> 缺省时间汇报间隔Field;
        
        private System.Nullable<uint> 缺省距离汇报间隔Field;
        
        private System.Nullable<uint> 色度Field;
        
        private System.Nullable<double> 超速报警预警差值Field;
        
        private System.Nullable<uint> 超速持续时间Field;
        
        private System.Nullable<Asiatek.TMS.TerminalOperation.PlateColor> 车牌颜色Field;
        
        private System.Nullable<ushort> 车辆所在的市域IDField;
        
        private System.Nullable<ushort> 车辆所在的省域IDField;
        
        private System.Nullable<double> 车辆里程表读数Field;
        
        private System.Nullable<uint> 连续驾驶时间门限Field;
        
        private string 道路运输证IC卡认证主服务器IP地址或域名Field;
        
        private System.Nullable<uint> 道路运输证IC卡认证主服务器TCP端口Field;
        
        private System.Nullable<uint> 道路运输证IC卡认证主服务器UDP端口Field;
        
        private string 道路运输证IC卡认证备份服务器IP地址或域名Field;
        
        private System.Nullable<uint> 饱和度Field;
        
        private System.Nullable<uint> 驾驶员未登录汇报时间间隔Field;
        
        private System.Nullable<uint> 驾驶员未登录汇报距离间隔Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<ushort> CAN总线通道1上传时间间隔 {
            get {
                return this.CAN总线通道1上传时间间隔Field;
            }
            set {
                if ((this.CAN总线通道1上传时间间隔Field.Equals(value) != true)) {
                    this.CAN总线通道1上传时间间隔Field = value;
                    this.RaisePropertyChanged("CAN总线通道1上传时间间隔");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> CAN总线通道1采集时间间隔 {
            get {
                return this.CAN总线通道1采集时间间隔Field;
            }
            set {
                if ((this.CAN总线通道1采集时间间隔Field.Equals(value) != true)) {
                    this.CAN总线通道1采集时间间隔Field = value;
                    this.RaisePropertyChanged("CAN总线通道1采集时间间隔");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<ushort> CAN总线通道2上传时间间隔 {
            get {
                return this.CAN总线通道2上传时间间隔Field;
            }
            set {
                if ((this.CAN总线通道2上传时间间隔Field.Equals(value) != true)) {
                    this.CAN总线通道2上传时间间隔Field = value;
                    this.RaisePropertyChanged("CAN总线通道2上传时间间隔");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> CAN总线通道2采集时间间隔 {
            get {
                return this.CAN总线通道2采集时间间隔Field;
            }
            set {
                if ((this.CAN总线通道2采集时间间隔Field.Equals(value) != true)) {
                    this.CAN总线通道2采集时间间隔Field = value;
                    this.RaisePropertyChanged("CAN总线通道2采集时间间隔");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<Asiatek.TMS.TerminalOperation.GNSSPositioningMode> GNSS定位模式 {
            get {
                return this.GNSS定位模式Field;
            }
            set {
                if ((this.GNSS定位模式Field.Equals(value) != true)) {
                    this.GNSS定位模式Field = value;
                    this.RaisePropertyChanged("GNSS定位模式");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<Asiatek.TMS.TerminalOperation.GNSSUploadWay> GNSS模块详细定位数据上传方式 {
            get {
                return this.GNSS模块详细定位数据上传方式Field;
            }
            set {
                if ((this.GNSS模块详细定位数据上传方式Field.Equals(value) != true)) {
                    this.GNSS模块详细定位数据上传方式Field = value;
                    this.RaisePropertyChanged("GNSS模块详细定位数据上传方式");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> GNSS模块详细定位数据上传设置 {
            get {
                return this.GNSS模块详细定位数据上传设置Field;
            }
            set {
                if ((this.GNSS模块详细定位数据上传设置Field.Equals(value) != true)) {
                    this.GNSS模块详细定位数据上传设置Field = value;
                    this.RaisePropertyChanged("GNSS模块详细定位数据上传设置");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<Asiatek.TMS.TerminalOperation.GNSSOutputFrequency> GNSS模块详细定位数据输出频率 {
            get {
                return this.GNSS模块详细定位数据输出频率Field;
            }
            set {
                if ((this.GNSS模块详细定位数据输出频率Field.Equals(value) != true)) {
                    this.GNSS模块详细定位数据输出频率Field = value;
                    this.RaisePropertyChanged("GNSS模块详细定位数据输出频率");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> GNSS模块详细定位数据采集频率 {
            get {
                return this.GNSS模块详细定位数据采集频率Field;
            }
            set {
                if ((this.GNSS模块详细定位数据采集频率Field.Equals(value) != true)) {
                    this.GNSS模块详细定位数据采集频率Field = value;
                    this.RaisePropertyChanged("GNSS模块详细定位数据采集频率");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<Asiatek.TMS.TerminalOperation.GNSSBaudRate> GNSS波特率 {
            get {
                return this.GNSS波特率Field;
            }
            set {
                if ((this.GNSS波特率Field.Equals(value) != true)) {
                    this.GNSS波特率Field = value;
                    this.RaisePropertyChanged("GNSS波特率");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> SMS消息应答超时时间 {
            get {
                return this.SMS消息应答超时时间Field;
            }
            set {
                if ((this.SMS消息应答超时时间Field.Equals(value) != true)) {
                    this.SMS消息应答超时时间Field = value;
                    this.RaisePropertyChanged("SMS消息应答超时时间");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> SMS消息重传次数 {
            get {
                return this.SMS消息重传次数Field;
            }
            set {
                if ((this.SMS消息重传次数Field.Equals(value) != true)) {
                    this.SMS消息重传次数Field = value;
                    this.RaisePropertyChanged("SMS消息重传次数");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> TCP消息应答超时时间 {
            get {
                return this.TCP消息应答超时时间Field;
            }
            set {
                if ((this.TCP消息应答超时时间Field.Equals(value) != true)) {
                    this.TCP消息应答超时时间Field = value;
                    this.RaisePropertyChanged("TCP消息应答超时时间");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> TCP消息重传次数 {
            get {
                return this.TCP消息重传次数Field;
            }
            set {
                if ((this.TCP消息重传次数Field.Equals(value) != true)) {
                    this.TCP消息重传次数Field = value;
                    this.RaisePropertyChanged("TCP消息重传次数");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> UDP消息应答超时时间 {
            get {
                return this.UDP消息应答超时时间Field;
            }
            set {
                if ((this.UDP消息应答超时时间Field.Equals(value) != true)) {
                    this.UDP消息应答超时时间Field = value;
                    this.RaisePropertyChanged("UDP消息应答超时时间");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> UDP消息重传次数 {
            get {
                return this.UDP消息重传次数Field;
            }
            set {
                if ((this.UDP消息重传次数Field.Equals(value) != true)) {
                    this.UDP消息重传次数Field = value;
                    this.RaisePropertyChanged("UDP消息重传次数");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string 主服务器APN或PPP拨号号码 {
            get {
                return this.主服务器APN或PPP拨号号码Field;
            }
            set {
                if ((object.ReferenceEquals(this.主服务器APN或PPP拨号号码Field, value) != true)) {
                    this.主服务器APN或PPP拨号号码Field = value;
                    this.RaisePropertyChanged("主服务器APN或PPP拨号号码");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string 主服务器IP地址或域名 {
            get {
                return this.主服务器IP地址或域名Field;
            }
            set {
                if ((object.ReferenceEquals(this.主服务器IP地址或域名Field, value) != true)) {
                    this.主服务器IP地址或域名Field = value;
                    this.RaisePropertyChanged("主服务器IP地址或域名");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string 主服务器无线通信拨号密码 {
            get {
                return this.主服务器无线通信拨号密码Field;
            }
            set {
                if ((object.ReferenceEquals(this.主服务器无线通信拨号密码Field, value) != true)) {
                    this.主服务器无线通信拨号密码Field = value;
                    this.RaisePropertyChanged("主服务器无线通信拨号密码");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string 主服务器无线通信拨号用户名 {
            get {
                return this.主服务器无线通信拨号用户名Field;
            }
            set {
                if ((object.ReferenceEquals(this.主服务器无线通信拨号用户名Field, value) != true)) {
                    this.主服务器无线通信拨号用户名Field = value;
                    this.RaisePropertyChanged("主服务器无线通信拨号用户名");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> 亮度 {
            get {
                return this.亮度Field;
            }
            set {
                if ((this.亮度Field.Equals(value) != true)) {
                    this.亮度Field = value;
                    this.RaisePropertyChanged("亮度");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> 休眠时汇报时间间隔 {
            get {
                return this.休眠时汇报时间间隔Field;
            }
            set {
                if ((this.休眠时汇报时间间隔Field.Equals(value) != true)) {
                    this.休眠时汇报时间间隔Field = value;
                    this.RaisePropertyChanged("休眠时汇报时间间隔");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> 休眠时汇报距离间隔 {
            get {
                return this.休眠时汇报距离间隔Field;
            }
            set {
                if ((this.休眠时汇报距离间隔Field.Equals(value) != true)) {
                    this.休眠时汇报距离间隔Field = value;
                    this.RaisePropertyChanged("休眠时汇报距离间隔");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<Asiatek.TMS.TerminalOperation.LocationReportingProgram> 位置汇报方案 {
            get {
                return this.位置汇报方案Field;
            }
            set {
                if ((this.位置汇报方案Field.Equals(value) != true)) {
                    this.位置汇报方案Field = value;
                    this.RaisePropertyChanged("位置汇报方案");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<Asiatek.TMS.TerminalOperation.LocationReportingStrategy> 位置汇报策略 {
            get {
                return this.位置汇报策略Field;
            }
            set {
                if ((this.位置汇报策略Field.Equals(value) != true)) {
                    this.位置汇报策略Field = value;
                    this.RaisePropertyChanged("位置汇报策略");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<ushort> 侧翻报警参数设置 {
            get {
                return this.侧翻报警参数设置Field;
            }
            set {
                if ((this.侧翻报警参数设置Field.Equals(value) != true)) {
                    this.侧翻报警参数设置Field = value;
                    this.RaisePropertyChanged("侧翻报警参数设置");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string 公安交通管理部门颁发的机动车号牌 {
            get {
                return this.公安交通管理部门颁发的机动车号牌Field;
            }
            set {
                if ((object.ReferenceEquals(this.公安交通管理部门颁发的机动车号牌Field, value) != true)) {
                    this.公安交通管理部门颁发的机动车号牌Field = value;
                    this.RaisePropertyChanged("公安交通管理部门颁发的机动车号牌");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<Asiatek.TMS.TerminalOperation.AlarmFlag> 关键标志 {
            get {
                return this.关键标志Field;
            }
            set {
                if ((this.关键标志Field.Equals(value) != true)) {
                    this.关键标志Field = value;
                    this.RaisePropertyChanged("关键标志");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> 图像或视频质量 {
            get {
                return this.图像或视频质量Field;
            }
            set {
                if ((this.图像或视频质量Field.Equals(value) != true)) {
                    this.图像或视频质量Field = value;
                    this.RaisePropertyChanged("图像或视频质量");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string 备份服务器APN {
            get {
                return this.备份服务器APNField;
            }
            set {
                if ((object.ReferenceEquals(this.备份服务器APNField, value) != true)) {
                    this.备份服务器APNField = value;
                    this.RaisePropertyChanged("备份服务器APN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string 备份服务器IP地址或域名 {
            get {
                return this.备份服务器IP地址或域名Field;
            }
            set {
                if ((object.ReferenceEquals(this.备份服务器IP地址或域名Field, value) != true)) {
                    this.备份服务器IP地址或域名Field = value;
                    this.RaisePropertyChanged("备份服务器IP地址或域名");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string 备份服务器无线通信拨号密码 {
            get {
                return this.备份服务器无线通信拨号密码Field;
            }
            set {
                if ((object.ReferenceEquals(this.备份服务器无线通信拨号密码Field, value) != true)) {
                    this.备份服务器无线通信拨号密码Field = value;
                    this.RaisePropertyChanged("备份服务器无线通信拨号密码");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string 备份服务器无线通信拨号用户名 {
            get {
                return this.备份服务器无线通信拨号用户名Field;
            }
            set {
                if ((object.ReferenceEquals(this.备份服务器无线通信拨号用户名Field, value) != true)) {
                    this.备份服务器无线通信拨号用户名Field = value;
                    this.RaisePropertyChanged("备份服务器无线通信拨号用户名");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] 复位电话号码 {
            get {
                return this.复位电话号码Field;
            }
            set {
                if ((object.ReferenceEquals(this.复位电话号码Field, value) != true)) {
                    this.复位电话号码Field = value;
                    this.RaisePropertyChanged("复位电话号码");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<Asiatek.TMS.TerminalOperation.TimedTakingPictureControl> 定时拍照控制 {
            get {
                return this.定时拍照控制Field;
            }
            set {
                if ((this.定时拍照控制Field.Equals(value) != true)) {
                    this.定时拍照控制Field = value;
                    this.RaisePropertyChanged("定时拍照控制");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<ushort> 定时时间间隔 {
            get {
                return this.定时时间间隔Field;
            }
            set {
                if ((this.定时时间间隔Field.Equals(value) != true)) {
                    this.定时时间间隔Field = value;
                    this.RaisePropertyChanged("定时时间间隔");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<Asiatek.TMS.TerminalOperation.DependOnDistanceTakingPictureControl> 定距拍照控制 {
            get {
                return this.定距拍照控制Field;
            }
            set {
                if ((this.定距拍照控制Field.Equals(value) != true)) {
                    this.定距拍照控制Field = value;
                    this.RaisePropertyChanged("定距拍照控制");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<ushort> 定距距离间隔 {
            get {
                return this.定距距离间隔Field;
            }
            set {
                if ((this.定距距离间隔Field.Equals(value) != true)) {
                    this.定距距离间隔Field = value;
                    this.RaisePropertyChanged("定距距离间隔");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> 对比度 {
            get {
                return this.对比度Field;
            }
            set {
                if ((this.对比度Field.Equals(value) != true)) {
                    this.对比度Field = value;
                    this.RaisePropertyChanged("对比度");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> 当天累计驾驶时间门限 {
            get {
                return this.当天累计驾驶时间门限Field;
            }
            set {
                if ((this.当天累计驾驶时间门限Field.Equals(value) != true)) {
                    this.当天累计驾驶时间门限Field = value;
                    this.RaisePropertyChanged("当天累计驾驶时间门限");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> 当月最长通话时间 {
            get {
                return this.当月最长通话时间Field;
            }
            set {
                if ((this.当月最长通话时间Field.Equals(value) != true)) {
                    this.当月最长通话时间Field = value;
                    this.RaisePropertyChanged("当月最长通话时间");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] 恢复出厂设置电话号码 {
            get {
                return this.恢复出厂设置电话号码Field;
            }
            set {
                if ((object.ReferenceEquals(this.恢复出厂设置电话号码Field, value) != true)) {
                    this.恢复出厂设置电话号码Field = value;
                    this.RaisePropertyChanged("恢复出厂设置电话号码");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<Asiatek.TMS.TerminalOperation.AlarmFlag> 报警发送文本SMS开关 {
            get {
                return this.报警发送文本SMS开关Field;
            }
            set {
                if ((this.报警发送文本SMS开关Field.Equals(value) != true)) {
                    this.报警发送文本SMS开关Field = value;
                    this.RaisePropertyChanged("报警发送文本SMS开关");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<Asiatek.TMS.TerminalOperation.AlarmFlag> 报警屏蔽字 {
            get {
                return this.报警屏蔽字Field;
            }
            set {
                if ((this.报警屏蔽字Field.Equals(value) != true)) {
                    this.报警屏蔽字Field = value;
                    this.RaisePropertyChanged("报警屏蔽字");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<Asiatek.TMS.TerminalOperation.AlarmFlag> 报警拍摄存储标志 {
            get {
                return this.报警拍摄存储标志Field;
            }
            set {
                if ((this.报警拍摄存储标志Field.Equals(value) != true)) {
                    this.报警拍摄存储标志Field = value;
                    this.RaisePropertyChanged("报警拍摄存储标志");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<Asiatek.TMS.TerminalOperation.AlarmFlag> 报警拍摄开关 {
            get {
                return this.报警拍摄开关Field;
            }
            set {
                if ((this.报警拍摄开关Field.Equals(value) != true)) {
                    this.报警拍摄开关Field = value;
                    this.RaisePropertyChanged("报警拍摄开关");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> 拐点补传角度 {
            get {
                return this.拐点补传角度Field;
            }
            set {
                if ((this.拐点补传角度Field.Equals(value) != true)) {
                    this.拐点补传角度Field = value;
                    this.RaisePropertyChanged("拐点补传角度");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] 接收终端SMS文本报警号码 {
            get {
                return this.接收终端SMS文本报警号码Field;
            }
            set {
                if ((object.ReferenceEquals(this.接收终端SMS文本报警号码Field, value) != true)) {
                    this.接收终端SMS文本报警号码Field = value;
                    this.RaisePropertyChanged("接收终端SMS文本报警号码");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> 最小休息时间 {
            get {
                return this.最小休息时间Field;
            }
            set {
                if ((this.最小休息时间Field.Equals(value) != true)) {
                    this.最小休息时间Field = value;
                    this.RaisePropertyChanged("最小休息时间");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> 最长停车时间 {
            get {
                return this.最长停车时间Field;
            }
            set {
                if ((this.最长停车时间Field.Equals(value) != true)) {
                    this.最长停车时间Field = value;
                    this.RaisePropertyChanged("最长停车时间");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> 最高速度 {
            get {
                return this.最高速度Field;
            }
            set {
                if ((this.最高速度Field.Equals(value) != true)) {
                    this.最高速度Field = value;
                    this.RaisePropertyChanged("最高速度");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> 服务器TCP端口 {
            get {
                return this.服务器TCP端口Field;
            }
            set {
                if ((this.服务器TCP端口Field.Equals(value) != true)) {
                    this.服务器TCP端口Field = value;
                    this.RaisePropertyChanged("服务器TCP端口");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> 服务器UDP端口 {
            get {
                return this.服务器UDP端口Field;
            }
            set {
                if ((this.服务器UDP端口Field.Equals(value) != true)) {
                    this.服务器UDP端口Field = value;
                    this.RaisePropertyChanged("服务器UDP端口");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> 每次最长通话时间 {
            get {
                return this.每次最长通话时间Field;
            }
            set {
                if ((this.每次最长通话时间Field.Equals(value) != true)) {
                    this.每次最长通话时间Field = value;
                    this.RaisePropertyChanged("每次最长通话时间");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<ushort> 电子围栏半径 {
            get {
                return this.电子围栏半径Field;
            }
            set {
                if ((this.电子围栏半径Field.Equals(value) != true)) {
                    this.电子围栏半径Field = value;
                    this.RaisePropertyChanged("电子围栏半径");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<ushort> 疲劳驾驶预警差值 {
            get {
                return this.疲劳驾驶预警差值Field;
            }
            set {
                if ((this.疲劳驾驶预警差值Field.Equals(value) != true)) {
                    this.疲劳驾驶预警差值Field = value;
                    this.RaisePropertyChanged("疲劳驾驶预警差值");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] 监听电话号码 {
            get {
                return this.监听电话号码Field;
            }
            set {
                if ((object.ReferenceEquals(this.监听电话号码Field, value) != true)) {
                    this.监听电话号码Field = value;
                    this.RaisePropertyChanged("监听电话号码");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] 监控平台SMS电话号码 {
            get {
                return this.监控平台SMS电话号码Field;
            }
            set {
                if ((object.ReferenceEquals(this.监控平台SMS电话号码Field, value) != true)) {
                    this.监控平台SMS电话号码Field = value;
                    this.RaisePropertyChanged("监控平台SMS电话号码");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] 监控平台电话号码 {
            get {
                return this.监控平台电话号码Field;
            }
            set {
                if ((object.ReferenceEquals(this.监控平台电话号码Field, value) != true)) {
                    this.监控平台电话号码Field = value;
                    this.RaisePropertyChanged("监控平台电话号码");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] 监管平台特权短信号码 {
            get {
                return this.监管平台特权短信号码Field;
            }
            set {
                if ((object.ReferenceEquals(this.监管平台特权短信号码Field, value) != true)) {
                    this.监管平台特权短信号码Field = value;
                    this.RaisePropertyChanged("监管平台特权短信号码");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<Asiatek.TMS.TerminalOperation.CollisionAlarmPara> 碰撞报警参数设置 {
            get {
                return this.碰撞报警参数设置Field;
            }
            set {
                if ((this.碰撞报警参数设置Field.Equals(value) != true)) {
                    this.碰撞报警参数设置Field = value;
                    this.RaisePropertyChanged("碰撞报警参数设置");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> 紧急报警时汇报时间间隔 {
            get {
                return this.紧急报警时汇报时间间隔Field;
            }
            set {
                if ((this.紧急报警时汇报时间间隔Field.Equals(value) != true)) {
                    this.紧急报警时汇报时间间隔Field = value;
                    this.RaisePropertyChanged("紧急报警时汇报时间间隔");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> 紧急报警时汇报距离间隔 {
            get {
                return this.紧急报警时汇报距离间隔Field;
            }
            set {
                if ((this.紧急报警时汇报距离间隔Field.Equals(value) != true)) {
                    this.紧急报警时汇报距离间隔Field = value;
                    this.RaisePropertyChanged("紧急报警时汇报距离间隔");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> 终端心跳发送间隔 {
            get {
                return this.终端心跳发送间隔Field;
            }
            set {
                if ((this.终端心跳发送间隔Field.Equals(value) != true)) {
                    this.终端心跳发送间隔Field = value;
                    this.RaisePropertyChanged("终端心跳发送间隔");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<Asiatek.TMS.TerminalOperation.TerminalPhoneAnsweringStrategy> 终端电话接听策略 {
            get {
                return this.终端电话接听策略Field;
            }
            set {
                if ((this.终端电话接听策略Field.Equals(value) != true)) {
                    this.终端电话接听策略Field = value;
                    this.RaisePropertyChanged("终端电话接听策略");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> 缺省时间汇报间隔 {
            get {
                return this.缺省时间汇报间隔Field;
            }
            set {
                if ((this.缺省时间汇报间隔Field.Equals(value) != true)) {
                    this.缺省时间汇报间隔Field = value;
                    this.RaisePropertyChanged("缺省时间汇报间隔");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> 缺省距离汇报间隔 {
            get {
                return this.缺省距离汇报间隔Field;
            }
            set {
                if ((this.缺省距离汇报间隔Field.Equals(value) != true)) {
                    this.缺省距离汇报间隔Field = value;
                    this.RaisePropertyChanged("缺省距离汇报间隔");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> 色度 {
            get {
                return this.色度Field;
            }
            set {
                if ((this.色度Field.Equals(value) != true)) {
                    this.色度Field = value;
                    this.RaisePropertyChanged("色度");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<double> 超速报警预警差值 {
            get {
                return this.超速报警预警差值Field;
            }
            set {
                if ((this.超速报警预警差值Field.Equals(value) != true)) {
                    this.超速报警预警差值Field = value;
                    this.RaisePropertyChanged("超速报警预警差值");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> 超速持续时间 {
            get {
                return this.超速持续时间Field;
            }
            set {
                if ((this.超速持续时间Field.Equals(value) != true)) {
                    this.超速持续时间Field = value;
                    this.RaisePropertyChanged("超速持续时间");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<Asiatek.TMS.TerminalOperation.PlateColor> 车牌颜色 {
            get {
                return this.车牌颜色Field;
            }
            set {
                if ((this.车牌颜色Field.Equals(value) != true)) {
                    this.车牌颜色Field = value;
                    this.RaisePropertyChanged("车牌颜色");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<ushort> 车辆所在的市域ID {
            get {
                return this.车辆所在的市域IDField;
            }
            set {
                if ((this.车辆所在的市域IDField.Equals(value) != true)) {
                    this.车辆所在的市域IDField = value;
                    this.RaisePropertyChanged("车辆所在的市域ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<ushort> 车辆所在的省域ID {
            get {
                return this.车辆所在的省域IDField;
            }
            set {
                if ((this.车辆所在的省域IDField.Equals(value) != true)) {
                    this.车辆所在的省域IDField = value;
                    this.RaisePropertyChanged("车辆所在的省域ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<double> 车辆里程表读数 {
            get {
                return this.车辆里程表读数Field;
            }
            set {
                if ((this.车辆里程表读数Field.Equals(value) != true)) {
                    this.车辆里程表读数Field = value;
                    this.RaisePropertyChanged("车辆里程表读数");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> 连续驾驶时间门限 {
            get {
                return this.连续驾驶时间门限Field;
            }
            set {
                if ((this.连续驾驶时间门限Field.Equals(value) != true)) {
                    this.连续驾驶时间门限Field = value;
                    this.RaisePropertyChanged("连续驾驶时间门限");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string 道路运输证IC卡认证主服务器IP地址或域名 {
            get {
                return this.道路运输证IC卡认证主服务器IP地址或域名Field;
            }
            set {
                if ((object.ReferenceEquals(this.道路运输证IC卡认证主服务器IP地址或域名Field, value) != true)) {
                    this.道路运输证IC卡认证主服务器IP地址或域名Field = value;
                    this.RaisePropertyChanged("道路运输证IC卡认证主服务器IP地址或域名");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> 道路运输证IC卡认证主服务器TCP端口 {
            get {
                return this.道路运输证IC卡认证主服务器TCP端口Field;
            }
            set {
                if ((this.道路运输证IC卡认证主服务器TCP端口Field.Equals(value) != true)) {
                    this.道路运输证IC卡认证主服务器TCP端口Field = value;
                    this.RaisePropertyChanged("道路运输证IC卡认证主服务器TCP端口");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> 道路运输证IC卡认证主服务器UDP端口 {
            get {
                return this.道路运输证IC卡认证主服务器UDP端口Field;
            }
            set {
                if ((this.道路运输证IC卡认证主服务器UDP端口Field.Equals(value) != true)) {
                    this.道路运输证IC卡认证主服务器UDP端口Field = value;
                    this.RaisePropertyChanged("道路运输证IC卡认证主服务器UDP端口");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string 道路运输证IC卡认证备份服务器IP地址或域名 {
            get {
                return this.道路运输证IC卡认证备份服务器IP地址或域名Field;
            }
            set {
                if ((object.ReferenceEquals(this.道路运输证IC卡认证备份服务器IP地址或域名Field, value) != true)) {
                    this.道路运输证IC卡认证备份服务器IP地址或域名Field = value;
                    this.RaisePropertyChanged("道路运输证IC卡认证备份服务器IP地址或域名");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> 饱和度 {
            get {
                return this.饱和度Field;
            }
            set {
                if ((this.饱和度Field.Equals(value) != true)) {
                    this.饱和度Field = value;
                    this.RaisePropertyChanged("饱和度");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> 驾驶员未登录汇报时间间隔 {
            get {
                return this.驾驶员未登录汇报时间间隔Field;
            }
            set {
                if ((this.驾驶员未登录汇报时间间隔Field.Equals(value) != true)) {
                    this.驾驶员未登录汇报时间间隔Field = value;
                    this.RaisePropertyChanged("驾驶员未登录汇报时间间隔");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<uint> 驾驶员未登录汇报距离间隔 {
            get {
                return this.驾驶员未登录汇报距离间隔Field;
            }
            set {
                if ((this.驾驶员未登录汇报距离间隔Field.Equals(value) != true)) {
                    this.驾驶员未登录汇报距离间隔Field = value;
                    this.RaisePropertyChanged("驾驶员未登录汇报距离间隔");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CollisionAlarmPara", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.TerminalManagement")]
    [System.SerializableAttribute()]
    public partial struct CollisionAlarmPara : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private double CollisionAccelerationField;
        
        private ushort CollisionTimeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double CollisionAcceleration {
            get {
                return this.CollisionAccelerationField;
            }
            set {
                if ((this.CollisionAccelerationField.Equals(value) != true)) {
                    this.CollisionAccelerationField = value;
                    this.RaisePropertyChanged("CollisionAcceleration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ushort CollisionTime {
            get {
                return this.CollisionTimeField;
            }
            set {
                if ((this.CollisionTimeField.Equals(value) != true)) {
                    this.CollisionTimeField = value;
                    this.RaisePropertyChanged("CollisionTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="GNSSPositioningMode", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.TerminalManagement")]
    public enum GNSSPositioningMode : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        启用GPS定位 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        启用北斗定位 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        启用GLONASS定位 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        启用Galileo定位 = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 15,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GNSSUploadWay", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.TerminalManagement")]
    public enum GNSSUploadWay : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        本地存储不上传 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        按时间间隔上传 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        按距离间隔上传 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        按累计时间上传 = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        按累计距离上传 = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        按累计条数上传 = 13,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GNSSOutputFrequency", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.TerminalManagement")]
    public enum GNSSOutputFrequency : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OF500MS = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OF1000MS = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OF2000MS = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OF3000MS = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OF4000MS = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GNSSBaudRate", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.TerminalManagement")]
    public enum GNSSBaudRate : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BR4800 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BR9600 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BR19200 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BR38400 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BR57600 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BR115200 = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationReportingProgram", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.TerminalManagement")]
    public enum LocationReportingProgram : uint {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        根据ACC状态 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        根据登录状态和ACC状态 = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationReportingStrategy", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.TerminalManagement")]
    public enum LocationReportingStrategy : uint {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        定时汇报 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        定距汇报 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        定时和定距汇报 = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlarmFlag", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.General")]
    public enum AlarmFlag : uint {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        紧急报警 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        超速报警 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        疲劳驾驶 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        危险预警 = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GNSS模块发生故障 = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GNSS天线未接或被剪断 = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GNSS天线短路 = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        终端主电源欠压 = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        终端主电源掉电 = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        终端LCD或显示器故障 = 512,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TTS模块故障 = 1024,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        摄像头故障 = 2048,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        道路运输证IC卡模块故障 = 4096,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        超速预警 = 8192,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        疲劳驾驶预警 = 16384,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        当天累计驾驶超时 = 262144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        超时停车 = 524288,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        进出区域 = 1048576,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        进出路线 = 2097152,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        路段行驶时间不足或过长 = 4194304,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        路线偏离报警 = 8388608,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        车辆VSS故障 = 16777216,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        车辆油量异常 = 33554432,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        车辆被盗 = 67108864,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        车辆非法点火 = 134217728,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        车辆非法位移 = 268435456,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        碰撞预警 = 536870912,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        侧翻预警 = 1073741824,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        非法开门报警 = 2147483648,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 4294737919,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimedTakingPictureControl", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.TerminalManagement")]
    public enum TimedTakingPictureControl : uint {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        允许摄像通道1定时拍照 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        允许摄像通道2定时拍照 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        允许摄像通道3定时拍照 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        允许摄像通道4定时拍照 = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        允许摄像通道5定时拍照 = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        上传摄像通道1定时拍照数据 = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        上传摄像通道2定时拍照数据 = 512,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        上传摄像通道3定时拍照数据 = 1024,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        上传摄像通道4定时拍照数据 = 2048,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        上传摄像通道5定时拍照数据 = 4096,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        定时时间单位为分 = 65536,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 73503,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="DependOnDistanceTakingPictureControl", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.TerminalManagement")]
    public enum DependOnDistanceTakingPictureControl : uint {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        允许摄像通道1定距拍照 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        允许摄像通道2定距拍照 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        允许摄像通道3定距拍照 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        允许摄像通道4定距拍照 = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        允许摄像通道5定距拍照 = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        上传摄像通道1定距拍照数据 = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        上传摄像通道2定距拍照数据 = 512,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        上传摄像通道3定距拍照数据 = 1024,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        上传摄像通道4定距拍照数据 = 2048,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        上传摄像通道5定距拍照数据 = 4096,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        定距距离单位为公里 = 65536,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 73503,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TerminalPhoneAnsweringStrategy", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.TerminalManagement")]
    public enum TerminalPhoneAnsweringStrategy : uint {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        自动接听 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ACCON时自动接听OFF时手动接听 = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlateColor", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.TerminalManagement")]
    public enum PlateColor : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        未上牌 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        蓝色 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        黄色 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        黑色 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        白色 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        绿色 = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        黄绿 = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        农黄 = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        其他 = 9,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TerminalControlData", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.TerminalManagement")]
    [System.SerializableAttribute()]
    public partial class TerminalControlData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private Asiatek.TMS.TerminalOperation.TerminalControlCMD CMDField;
        
        private Asiatek.TMS.TerminalOperation.ConnectToSpecifiedServerData ConnectToSpecifiedServerDataField;
        
        private Asiatek.TMS.TerminalOperation.WirelessUpgradeData WirelessUpgradeDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public Asiatek.TMS.TerminalOperation.TerminalControlCMD CMD {
            get {
                return this.CMDField;
            }
            set {
                if ((this.CMDField.Equals(value) != true)) {
                    this.CMDField = value;
                    this.RaisePropertyChanged("CMD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Asiatek.TMS.TerminalOperation.ConnectToSpecifiedServerData ConnectToSpecifiedServerData {
            get {
                return this.ConnectToSpecifiedServerDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectToSpecifiedServerDataField, value) != true)) {
                    this.ConnectToSpecifiedServerDataField = value;
                    this.RaisePropertyChanged("ConnectToSpecifiedServerData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Asiatek.TMS.TerminalOperation.WirelessUpgradeData WirelessUpgradeData {
            get {
                return this.WirelessUpgradeDataField;
            }
            set {
                if ((object.ReferenceEquals(this.WirelessUpgradeDataField, value) != true)) {
                    this.WirelessUpgradeDataField = value;
                    this.RaisePropertyChanged("WirelessUpgradeData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConnectToSpecifiedServerData", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.TerminalManagement")]
    [System.SerializableAttribute()]
    public partial class ConnectToSpecifiedServerData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string AddressField;
        
        private string AuthCodeField;
        
        private byte ConnectControlField;
        
        private string DialupPasswordField;
        
        private string DialupPointNameField;
        
        private string DialupUserNameField;
        
        private System.Nullable<ushort> TCPPortField;
        
        private System.Nullable<ushort> TimeLimitField;
        
        private System.Nullable<ushort> UDPPortField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string AuthCode {
            get {
                return this.AuthCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthCodeField, value) != true)) {
                    this.AuthCodeField = value;
                    this.RaisePropertyChanged("AuthCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public byte ConnectControl {
            get {
                return this.ConnectControlField;
            }
            set {
                if ((this.ConnectControlField.Equals(value) != true)) {
                    this.ConnectControlField = value;
                    this.RaisePropertyChanged("ConnectControl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string DialupPassword {
            get {
                return this.DialupPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.DialupPasswordField, value) != true)) {
                    this.DialupPasswordField = value;
                    this.RaisePropertyChanged("DialupPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string DialupPointName {
            get {
                return this.DialupPointNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DialupPointNameField, value) != true)) {
                    this.DialupPointNameField = value;
                    this.RaisePropertyChanged("DialupPointName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string DialupUserName {
            get {
                return this.DialupUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DialupUserNameField, value) != true)) {
                    this.DialupUserNameField = value;
                    this.RaisePropertyChanged("DialupUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<ushort> TCPPort {
            get {
                return this.TCPPortField;
            }
            set {
                if ((this.TCPPortField.Equals(value) != true)) {
                    this.TCPPortField = value;
                    this.RaisePropertyChanged("TCPPort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<ushort> TimeLimit {
            get {
                return this.TimeLimitField;
            }
            set {
                if ((this.TimeLimitField.Equals(value) != true)) {
                    this.TimeLimitField = value;
                    this.RaisePropertyChanged("TimeLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<ushort> UDPPort {
            get {
                return this.UDPPortField;
            }
            set {
                if ((this.UDPPortField.Equals(value) != true)) {
                    this.UDPPortField = value;
                    this.RaisePropertyChanged("UDPPort");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WirelessUpgradeData", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.TerminalManagement")]
    [System.SerializableAttribute()]
    public partial class WirelessUpgradeData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string AddressField;
        
        private string DialupPasswordField;
        
        private string DialupPointNameField;
        
        private string DialupUserNameField;
        
        private string FirmwareVersionField;
        
        private string HardwareVersionField;
        
        private string ManufacturerIDField;
        
        private System.Nullable<ushort> TCPPortField;
        
        private System.Nullable<ushort> TimeLimitField;
        
        private System.Nullable<ushort> UDPPortField;
        
        private string URLField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string DialupPassword {
            get {
                return this.DialupPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.DialupPasswordField, value) != true)) {
                    this.DialupPasswordField = value;
                    this.RaisePropertyChanged("DialupPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string DialupPointName {
            get {
                return this.DialupPointNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DialupPointNameField, value) != true)) {
                    this.DialupPointNameField = value;
                    this.RaisePropertyChanged("DialupPointName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string DialupUserName {
            get {
                return this.DialupUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DialupUserNameField, value) != true)) {
                    this.DialupUserNameField = value;
                    this.RaisePropertyChanged("DialupUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string FirmwareVersion {
            get {
                return this.FirmwareVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.FirmwareVersionField, value) != true)) {
                    this.FirmwareVersionField = value;
                    this.RaisePropertyChanged("FirmwareVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string HardwareVersion {
            get {
                return this.HardwareVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.HardwareVersionField, value) != true)) {
                    this.HardwareVersionField = value;
                    this.RaisePropertyChanged("HardwareVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ManufacturerID {
            get {
                return this.ManufacturerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerIDField, value) != true)) {
                    this.ManufacturerIDField = value;
                    this.RaisePropertyChanged("ManufacturerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<ushort> TCPPort {
            get {
                return this.TCPPortField;
            }
            set {
                if ((this.TCPPortField.Equals(value) != true)) {
                    this.TCPPortField = value;
                    this.RaisePropertyChanged("TCPPort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<ushort> TimeLimit {
            get {
                return this.TimeLimitField;
            }
            set {
                if ((this.TimeLimitField.Equals(value) != true)) {
                    this.TimeLimitField = value;
                    this.RaisePropertyChanged("TimeLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<ushort> UDPPort {
            get {
                return this.UDPPortField;
            }
            set {
                if ((this.UDPPortField.Equals(value) != true)) {
                    this.UDPPortField = value;
                    this.RaisePropertyChanged("UDPPort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string URL {
            get {
                return this.URLField;
            }
            set {
                if ((object.ReferenceEquals(this.URLField, value) != true)) {
                    this.URLField = value;
                    this.RaisePropertyChanged("URL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TerminalControlCMD", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.TerminalManagement")]
    public enum TerminalControlCMD : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        无线升级 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        控制终端连接指定服务器 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        终端关机 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        终端复位 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        终端恢复出厂设置 = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        关闭数据通信 = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        关闭所有无线通信 = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultNullableOfTerminalGeneralRepDataWss2Y_Pri", Namespace="http://schemas.datacontract.org/2004/07/STDServiceCore")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Asiatek.TMS.TerminalOperation.OperationResultGeneralRep))]
    public partial class OperationResultNullableOfTerminalGeneralRepDataWss2Y_Pri : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private Asiatek.TMS.TerminalOperation.OperationResultCode CodeField;
        
        private string MessageField;
        
        private System.Nullable<Asiatek.TMS.TerminalOperation.TerminalGeneralRepData> ResultDataField;
        
        private bool StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Asiatek.TMS.TerminalOperation.OperationResultCode Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<Asiatek.TMS.TerminalOperation.TerminalGeneralRepData> ResultData {
            get {
                return this.ResultDataField;
            }
            set {
                if ((this.ResultDataField.Equals(value) != true)) {
                    this.ResultDataField = value;
                    this.RaisePropertyChanged("ResultData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TerminalGeneralRepData", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.General")]
    [System.SerializableAttribute()]
    public partial struct TerminalGeneralRepData : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private Asiatek.TMS.TerminalOperation.PlatformMessageID MessageIDField;
        
        private Asiatek.TMS.TerminalOperation.TerminalGeneralRepResult ResultField;
        
        private ushort SerialNumberField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Asiatek.TMS.TerminalOperation.PlatformMessageID MessageID {
            get {
                return this.MessageIDField;
            }
            set {
                if ((this.MessageIDField.Equals(value) != true)) {
                    this.MessageIDField = value;
                    this.RaisePropertyChanged("MessageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Asiatek.TMS.TerminalOperation.TerminalGeneralRepResult Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ushort SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((this.SerialNumberField.Equals(value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultGeneralRep", Namespace="http://schemas.datacontract.org/2004/07/STDServiceCore")]
    [System.SerializableAttribute()]
    public partial class OperationResultGeneralRep : Asiatek.TMS.TerminalOperation.OperationResultNullableOfTerminalGeneralRepDataWss2Y_Pri {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlatformMessageID", Namespace="http://schemas.datacontract.org/2004/07/STD808Core")]
    public enum PlatformMessageID : ushort {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        平台通用应答 = 32769,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        补传分包请求 = 32771,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        终端注册应答 = 33024,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        设置终端参数 = 33027,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        查询终端参数 = 33028,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        终端控制 = 33029,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        查询指定终端参数 = 33030,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        查询终端属性 = 33031,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        下发终端升级包 = 33032,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        位置信息查询 = 33281,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        临时位置跟踪控制 = 33282,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        人工确认报警消息 = 33283,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        文本信息下发 = 33536,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        事件设置 = 33537,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        提问下发 = 33538,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        信息点播菜单设置 = 33539,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        信息服务 = 33540,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        电话回拨 = 33792,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        设置电话本 = 33793,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        车辆控制 = 34048,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        设置圆形区域 = 34304,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        删除圆形区域 = 34305,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        设置矩形区域 = 34306,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        删除矩形区域 = 34307,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        设置多边形区域 = 34308,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        删除多边形区域 = 34309,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        设置路线 = 34310,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        删除路线 = 34311,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        行驶记录仪数据采集命 = 34560,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        行驶记录仪参数下传命令 = 34561,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        上报驾驶员身份信息请求 = 34562,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        多媒体数据上传应答 = 34816,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        摄像头立即拍摄命令 = 34817,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        存储多媒体数据检索 = 34818,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        存储多媒体数据上传 = 34819,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        录音开始命令 = 34820,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        单条存储多媒体数据检索上传命令 = 34821,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        数据下行透传 = 35072,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        平台RSA公钥 = 35328,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TerminalGeneralRepResult", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.General")]
    public enum TerminalGeneralRepResult : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        成功或确认 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        失败 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        消息有误 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        不支持 = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TerminalParasSettingData", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.TerminalManagement")]
    [System.SerializableAttribute()]
    public partial class TerminalParasSettingData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private Asiatek.TMS.TerminalOperation.TerminalParasData ParaItemsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public Asiatek.TMS.TerminalOperation.TerminalParasData ParaItems {
            get {
                return this.ParaItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ParaItemsField, value) != true)) {
                    this.ParaItemsField = value;
                    this.RaisePropertyChanged("ParaItems");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ManualConfirmAlarmData", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.LocationAlarm")]
    [System.SerializableAttribute()]
    public partial class ManualConfirmAlarmData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private Asiatek.TMS.TerminalOperation.ManualConfirmAlarmType ManualConfirmAlarmTypeField;
        
        private ushort SerialNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public Asiatek.TMS.TerminalOperation.ManualConfirmAlarmType ManualConfirmAlarmType {
            get {
                return this.ManualConfirmAlarmTypeField;
            }
            set {
                if ((this.ManualConfirmAlarmTypeField.Equals(value) != true)) {
                    this.ManualConfirmAlarmTypeField = value;
                    this.RaisePropertyChanged("ManualConfirmAlarmType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ushort SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((this.SerialNumberField.Equals(value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="ManualConfirmAlarmType", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.LocationAlarm")]
    public enum ManualConfirmAlarmType : uint {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        确认紧急报警 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        确认危险报警 = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        确认进出区域报警 = 1048576,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        确认进出路线报警 = 2097152,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        确认路段行驶时间不足或过长报警 = 4194304,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        确认车辆非法点火报警 = 134217728,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        确认车辆非法移位报警 = 268435456,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 409993225,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TextInformationData", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.Information")]
    [System.SerializableAttribute()]
    public partial class TextInformationData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string ContentField;
        
        private Asiatek.TMS.TerminalOperation.TextInformationFlag TextInformationFlagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public Asiatek.TMS.TerminalOperation.TextInformationFlag TextInformationFlag {
            get {
                return this.TextInformationFlagField;
            }
            set {
                if ((this.TextInformationFlagField.Equals(value) != true)) {
                    this.TextInformationFlagField = value;
                    this.RaisePropertyChanged("TextInformationFlag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="TextInformationFlag", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.Information")]
    public enum TextInformationFlag : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        紧急 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        终端显示器显示 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        终端TTS播读 = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        广告屏显示 = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CAN故障码信息 = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 61,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventSettingData", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.Information")]
    [System.SerializableAttribute()]
    public partial class EventSettingData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private Asiatek.TMS.TerminalOperation.EventSettingItem[] EventSettingItemsField;
        
        private Asiatek.TMS.TerminalOperation.EventSettingType EventSettingTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Asiatek.TMS.TerminalOperation.EventSettingItem[] EventSettingItems {
            get {
                return this.EventSettingItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.EventSettingItemsField, value) != true)) {
                    this.EventSettingItemsField = value;
                    this.RaisePropertyChanged("EventSettingItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Asiatek.TMS.TerminalOperation.EventSettingType EventSettingType {
            get {
                return this.EventSettingTypeField;
            }
            set {
                if ((this.EventSettingTypeField.Equals(value) != true)) {
                    this.EventSettingTypeField = value;
                    this.RaisePropertyChanged("EventSettingType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventSettingItem", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.Information")]
    [System.SerializableAttribute()]
    public partial class EventSettingItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string EventContentField;
        
        private byte EventIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public string EventContent {
            get {
                return this.EventContentField;
            }
            set {
                if ((object.ReferenceEquals(this.EventContentField, value) != true)) {
                    this.EventContentField = value;
                    this.RaisePropertyChanged("EventContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public byte EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventSettingType", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.Information")]
    public enum EventSettingType : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        删除终端现有所有事件 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        更新时间 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        追加时间 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        修改事件 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        删除特定几项事件 = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuestionSendingData", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.Information")]
    [System.SerializableAttribute()]
    public partial class QuestionSendingData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private Asiatek.TMS.TerminalOperation.AnswerItem[] AnswerItemsField;
        
        private string QuestionField;
        
        private Asiatek.TMS.TerminalOperation.QuestionSendingFlag QuestionSendingFlagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public Asiatek.TMS.TerminalOperation.AnswerItem[] AnswerItems {
            get {
                return this.AnswerItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswerItemsField, value) != true)) {
                    this.AnswerItemsField = value;
                    this.RaisePropertyChanged("AnswerItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public string Question {
            get {
                return this.QuestionField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionField, value) != true)) {
                    this.QuestionField = value;
                    this.RaisePropertyChanged("Question");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public Asiatek.TMS.TerminalOperation.QuestionSendingFlag QuestionSendingFlag {
            get {
                return this.QuestionSendingFlagField;
            }
            set {
                if ((this.QuestionSendingFlagField.Equals(value) != true)) {
                    this.QuestionSendingFlagField = value;
                    this.RaisePropertyChanged("QuestionSendingFlag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnswerItem", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.Information")]
    [System.SerializableAttribute()]
    public partial class AnswerItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string AnswerContentField;
        
        private byte IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public string AnswerContent {
            get {
                return this.AnswerContentField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswerContentField, value) != true)) {
                    this.AnswerContentField = value;
                    this.RaisePropertyChanged("AnswerContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public byte ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuestionSendingFlag", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.Information")]
    public enum QuestionSendingFlag : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        紧急 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        终端TTS播读 = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        广告屏显示 = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 25,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TelphoneCallBackData", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.Telephone")]
    [System.SerializableAttribute()]
    public partial class TelphoneCallBackData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool IsMonitoringField;
        
        private string PhoneNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsMonitoring {
            get {
                return this.IsMonitoringField;
            }
            set {
                if ((this.IsMonitoringField.Equals(value) != true)) {
                    this.IsMonitoringField = value;
                    this.RaisePropertyChanged("IsMonitoring");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TelphoneBookSettingData", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.Telephone")]
    [System.SerializableAttribute()]
    public partial class TelphoneBookSettingData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private Asiatek.TMS.TerminalOperation.ContactItem[] ContactItemsField;
        
        private Asiatek.TMS.TerminalOperation.TelphoneBookSettingType TelphoneBookSettingTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Asiatek.TMS.TerminalOperation.ContactItem[] ContactItems {
            get {
                return this.ContactItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactItemsField, value) != true)) {
                    this.ContactItemsField = value;
                    this.RaisePropertyChanged("ContactItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Asiatek.TMS.TerminalOperation.TelphoneBookSettingType TelphoneBookSettingType {
            get {
                return this.TelphoneBookSettingTypeField;
            }
            set {
                if ((this.TelphoneBookSettingTypeField.Equals(value) != true)) {
                    this.TelphoneBookSettingTypeField = value;
                    this.RaisePropertyChanged("TelphoneBookSettingType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactItem", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.Telephone")]
    [System.SerializableAttribute()]
    public partial class ContactItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string ContactField;
        
        private Asiatek.TMS.TerminalOperation.ContactItemFlag ContactItemFlagField;
        
        private string PhoneNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public string Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Asiatek.TMS.TerminalOperation.ContactItemFlag ContactItemFlag {
            get {
                return this.ContactItemFlagField;
            }
            set {
                if ((this.ContactItemFlagField.Equals(value) != true)) {
                    this.ContactItemFlagField = value;
                    this.RaisePropertyChanged("ContactItemFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TelphoneBookSettingType", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.Telephone")]
    public enum TelphoneBookSettingType : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        删除终端上所有存储的联系人 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        更新电话本 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        追加电话本 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        修改电话本 = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactItemFlag", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.Telephone")]
    public enum ContactItemFlag : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        呼入 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        呼出 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        呼入与呼出 = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CircularRegionSettingData", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.VehicleManagement")]
    [System.SerializableAttribute()]
    public partial class CircularRegionSettingData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private Asiatek.TMS.TerminalOperation.CircularRegionItem[] CircularRegionItemsField;
        
        private Asiatek.TMS.TerminalOperation.RegionSettingType RegionSettingTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public Asiatek.TMS.TerminalOperation.CircularRegionItem[] CircularRegionItems {
            get {
                return this.CircularRegionItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.CircularRegionItemsField, value) != true)) {
                    this.CircularRegionItemsField = value;
                    this.RaisePropertyChanged("CircularRegionItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Asiatek.TMS.TerminalOperation.RegionSettingType RegionSettingType {
            get {
                return this.RegionSettingTypeField;
            }
            set {
                if ((this.RegionSettingTypeField.Equals(value) != true)) {
                    this.RegionSettingTypeField = value;
                    this.RaisePropertyChanged("RegionSettingType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CircularRegionItem", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.VehicleManagement")]
    [System.SerializableAttribute()]
    public partial class CircularRegionItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private double CentralPointLatitudeField;
        
        private double CentralPointLongitudeField;
        
        private System.Nullable<System.DateTime> EndDateTimeField;
        
        private bool IsCyclicalField;
        
        private System.Nullable<ushort> MaxSpeedField;
        
        private System.Nullable<byte> OverSpeedDurationField;
        
        private uint RadiusField;
        
        private uint RegionIDField;
        
        private Asiatek.TMS.TerminalOperation.RegionProperty RegionPropertyField;
        
        private System.Nullable<System.DateTime> StartDateTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double CentralPointLatitude {
            get {
                return this.CentralPointLatitudeField;
            }
            set {
                if ((this.CentralPointLatitudeField.Equals(value) != true)) {
                    this.CentralPointLatitudeField = value;
                    this.RaisePropertyChanged("CentralPointLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double CentralPointLongitude {
            get {
                return this.CentralPointLongitudeField;
            }
            set {
                if ((this.CentralPointLongitudeField.Equals(value) != true)) {
                    this.CentralPointLongitudeField = value;
                    this.RaisePropertyChanged("CentralPointLongitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.DateTime> EndDateTime {
            get {
                return this.EndDateTimeField;
            }
            set {
                if ((this.EndDateTimeField.Equals(value) != true)) {
                    this.EndDateTimeField = value;
                    this.RaisePropertyChanged("EndDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsCyclical {
            get {
                return this.IsCyclicalField;
            }
            set {
                if ((this.IsCyclicalField.Equals(value) != true)) {
                    this.IsCyclicalField = value;
                    this.RaisePropertyChanged("IsCyclical");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<ushort> MaxSpeed {
            get {
                return this.MaxSpeedField;
            }
            set {
                if ((this.MaxSpeedField.Equals(value) != true)) {
                    this.MaxSpeedField = value;
                    this.RaisePropertyChanged("MaxSpeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<byte> OverSpeedDuration {
            get {
                return this.OverSpeedDurationField;
            }
            set {
                if ((this.OverSpeedDurationField.Equals(value) != true)) {
                    this.OverSpeedDurationField = value;
                    this.RaisePropertyChanged("OverSpeedDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public uint Radius {
            get {
                return this.RadiusField;
            }
            set {
                if ((this.RadiusField.Equals(value) != true)) {
                    this.RadiusField = value;
                    this.RaisePropertyChanged("Radius");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public uint RegionID {
            get {
                return this.RegionIDField;
            }
            set {
                if ((this.RegionIDField.Equals(value) != true)) {
                    this.RegionIDField = value;
                    this.RaisePropertyChanged("RegionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public Asiatek.TMS.TerminalOperation.RegionProperty RegionProperty {
            get {
                return this.RegionPropertyField;
            }
            set {
                if ((this.RegionPropertyField.Equals(value) != true)) {
                    this.RegionPropertyField = value;
                    this.RaisePropertyChanged("RegionProperty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.DateTime> StartDateTime {
            get {
                return this.StartDateTimeField;
            }
            set {
                if ((this.StartDateTimeField.Equals(value) != true)) {
                    this.StartDateTimeField = value;
                    this.RaisePropertyChanged("StartDateTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegionSettingType", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.VehicleManagement")]
    public enum RegionSettingType : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        更新区域 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        追加区域 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        修改区域 = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegionProperty", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.VehicleManagement")]
    public enum RegionProperty : ushort {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        根据时间 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        限速 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        进区域报警给驾驶员 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        进区域报警给平台 = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        出区域报警给驾驶员 = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        出区域报警给平台 = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        南纬 = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        西经 = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        禁止开门 = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        进区域关闭通信模块 = 16384,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        进区域采集GNSS详细定位数据 = 32768,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 49663,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegionLineDeletionData", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.VehicleManagement")]
    [System.SerializableAttribute()]
    public partial class RegionLineDeletionData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private uint[] IDsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public uint[] IDs {
            get {
                return this.IDsField;
            }
            set {
                if ((object.ReferenceEquals(this.IDsField, value) != true)) {
                    this.IDsField = value;
                    this.RaisePropertyChanged("IDs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RectangularRegionSettingData", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.VehicleManagement")]
    [System.SerializableAttribute()]
    public partial class RectangularRegionSettingData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private Asiatek.TMS.TerminalOperation.RectangularRegionItem[] RectangularRegionItemsField;
        
        private Asiatek.TMS.TerminalOperation.RegionSettingType RegionSettingTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public Asiatek.TMS.TerminalOperation.RectangularRegionItem[] RectangularRegionItems {
            get {
                return this.RectangularRegionItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.RectangularRegionItemsField, value) != true)) {
                    this.RectangularRegionItemsField = value;
                    this.RaisePropertyChanged("RectangularRegionItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Asiatek.TMS.TerminalOperation.RegionSettingType RegionSettingType {
            get {
                return this.RegionSettingTypeField;
            }
            set {
                if ((this.RegionSettingTypeField.Equals(value) != true)) {
                    this.RegionSettingTypeField = value;
                    this.RaisePropertyChanged("RegionSettingType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RectangularRegionItem", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.VehicleManagement")]
    [System.SerializableAttribute()]
    public partial class RectangularRegionItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private double BottomRightPointLatitudeField;
        
        private double BottomRightPointLongitudeField;
        
        private System.Nullable<System.DateTime> EndDateTimeField;
        
        private bool IsCyclicalField;
        
        private System.Nullable<ushort> MaxSpeedField;
        
        private System.Nullable<byte> OverSpeedDurationField;
        
        private uint RegionIDField;
        
        private Asiatek.TMS.TerminalOperation.RegionProperty RegionPropertyField;
        
        private System.Nullable<System.DateTime> StartDateTimeField;
        
        private double TopLeftPointLatitudeField;
        
        private double TopLeftPointLongitudeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double BottomRightPointLatitude {
            get {
                return this.BottomRightPointLatitudeField;
            }
            set {
                if ((this.BottomRightPointLatitudeField.Equals(value) != true)) {
                    this.BottomRightPointLatitudeField = value;
                    this.RaisePropertyChanged("BottomRightPointLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double BottomRightPointLongitude {
            get {
                return this.BottomRightPointLongitudeField;
            }
            set {
                if ((this.BottomRightPointLongitudeField.Equals(value) != true)) {
                    this.BottomRightPointLongitudeField = value;
                    this.RaisePropertyChanged("BottomRightPointLongitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.DateTime> EndDateTime {
            get {
                return this.EndDateTimeField;
            }
            set {
                if ((this.EndDateTimeField.Equals(value) != true)) {
                    this.EndDateTimeField = value;
                    this.RaisePropertyChanged("EndDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsCyclical {
            get {
                return this.IsCyclicalField;
            }
            set {
                if ((this.IsCyclicalField.Equals(value) != true)) {
                    this.IsCyclicalField = value;
                    this.RaisePropertyChanged("IsCyclical");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<ushort> MaxSpeed {
            get {
                return this.MaxSpeedField;
            }
            set {
                if ((this.MaxSpeedField.Equals(value) != true)) {
                    this.MaxSpeedField = value;
                    this.RaisePropertyChanged("MaxSpeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<byte> OverSpeedDuration {
            get {
                return this.OverSpeedDurationField;
            }
            set {
                if ((this.OverSpeedDurationField.Equals(value) != true)) {
                    this.OverSpeedDurationField = value;
                    this.RaisePropertyChanged("OverSpeedDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public uint RegionID {
            get {
                return this.RegionIDField;
            }
            set {
                if ((this.RegionIDField.Equals(value) != true)) {
                    this.RegionIDField = value;
                    this.RaisePropertyChanged("RegionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Asiatek.TMS.TerminalOperation.RegionProperty RegionProperty {
            get {
                return this.RegionPropertyField;
            }
            set {
                if ((this.RegionPropertyField.Equals(value) != true)) {
                    this.RegionPropertyField = value;
                    this.RaisePropertyChanged("RegionProperty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.DateTime> StartDateTime {
            get {
                return this.StartDateTimeField;
            }
            set {
                if ((this.StartDateTimeField.Equals(value) != true)) {
                    this.StartDateTimeField = value;
                    this.RaisePropertyChanged("StartDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double TopLeftPointLatitude {
            get {
                return this.TopLeftPointLatitudeField;
            }
            set {
                if ((this.TopLeftPointLatitudeField.Equals(value) != true)) {
                    this.TopLeftPointLatitudeField = value;
                    this.RaisePropertyChanged("TopLeftPointLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double TopLeftPointLongitude {
            get {
                return this.TopLeftPointLongitudeField;
            }
            set {
                if ((this.TopLeftPointLongitudeField.Equals(value) != true)) {
                    this.TopLeftPointLongitudeField = value;
                    this.RaisePropertyChanged("TopLeftPointLongitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolygonRegionSettingData", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.VehicleManagement")]
    [System.SerializableAttribute()]
    public partial class PolygonRegionSettingData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Nullable<System.DateTime> EndDateTimeField;
        
        private bool IsCyclicalField;
        
        private System.Nullable<ushort> MaxSpeedField;
        
        private System.Nullable<byte> OverSpeedDurationField;
        
        private uint RegionIDField;
        
        private Asiatek.TMS.TerminalOperation.RegionProperty RegionPropertyField;
        
        private System.Nullable<System.DateTime> StartDateTimeField;
        
        private Asiatek.TMS.TerminalOperation.VertexItem[] VertexItemsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.DateTime> EndDateTime {
            get {
                return this.EndDateTimeField;
            }
            set {
                if ((this.EndDateTimeField.Equals(value) != true)) {
                    this.EndDateTimeField = value;
                    this.RaisePropertyChanged("EndDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsCyclical {
            get {
                return this.IsCyclicalField;
            }
            set {
                if ((this.IsCyclicalField.Equals(value) != true)) {
                    this.IsCyclicalField = value;
                    this.RaisePropertyChanged("IsCyclical");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<ushort> MaxSpeed {
            get {
                return this.MaxSpeedField;
            }
            set {
                if ((this.MaxSpeedField.Equals(value) != true)) {
                    this.MaxSpeedField = value;
                    this.RaisePropertyChanged("MaxSpeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<byte> OverSpeedDuration {
            get {
                return this.OverSpeedDurationField;
            }
            set {
                if ((this.OverSpeedDurationField.Equals(value) != true)) {
                    this.OverSpeedDurationField = value;
                    this.RaisePropertyChanged("OverSpeedDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public uint RegionID {
            get {
                return this.RegionIDField;
            }
            set {
                if ((this.RegionIDField.Equals(value) != true)) {
                    this.RegionIDField = value;
                    this.RaisePropertyChanged("RegionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Asiatek.TMS.TerminalOperation.RegionProperty RegionProperty {
            get {
                return this.RegionPropertyField;
            }
            set {
                if ((this.RegionPropertyField.Equals(value) != true)) {
                    this.RegionPropertyField = value;
                    this.RaisePropertyChanged("RegionProperty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.DateTime> StartDateTime {
            get {
                return this.StartDateTimeField;
            }
            set {
                if ((this.StartDateTimeField.Equals(value) != true)) {
                    this.StartDateTimeField = value;
                    this.RaisePropertyChanged("StartDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public Asiatek.TMS.TerminalOperation.VertexItem[] VertexItems {
            get {
                return this.VertexItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.VertexItemsField, value) != true)) {
                    this.VertexItemsField = value;
                    this.RaisePropertyChanged("VertexItems");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VertexItem", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.VehicleManagement")]
    [System.SerializableAttribute()]
    public partial struct VertexItem : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private double LatitudeField;
        
        private double LongitudeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LineSettingData", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.VehicleManagement")]
    [System.SerializableAttribute()]
    public partial class LineSettingData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Nullable<System.DateTime> EndDateTimeField;
        
        private bool IsCyclicalField;
        
        private uint LineIDField;
        
        private Asiatek.TMS.TerminalOperation.LineInflectionPointItem[] LineInflectionPointItemsField;
        
        private Asiatek.TMS.TerminalOperation.LineProperty LinePropertyField;
        
        private System.Nullable<System.DateTime> StartDateTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.DateTime> EndDateTime {
            get {
                return this.EndDateTimeField;
            }
            set {
                if ((this.EndDateTimeField.Equals(value) != true)) {
                    this.EndDateTimeField = value;
                    this.RaisePropertyChanged("EndDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsCyclical {
            get {
                return this.IsCyclicalField;
            }
            set {
                if ((this.IsCyclicalField.Equals(value) != true)) {
                    this.IsCyclicalField = value;
                    this.RaisePropertyChanged("IsCyclical");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public uint LineID {
            get {
                return this.LineIDField;
            }
            set {
                if ((this.LineIDField.Equals(value) != true)) {
                    this.LineIDField = value;
                    this.RaisePropertyChanged("LineID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public Asiatek.TMS.TerminalOperation.LineInflectionPointItem[] LineInflectionPointItems {
            get {
                return this.LineInflectionPointItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.LineInflectionPointItemsField, value) != true)) {
                    this.LineInflectionPointItemsField = value;
                    this.RaisePropertyChanged("LineInflectionPointItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public Asiatek.TMS.TerminalOperation.LineProperty LineProperty {
            get {
                return this.LinePropertyField;
            }
            set {
                if ((this.LinePropertyField.Equals(value) != true)) {
                    this.LinePropertyField = value;
                    this.RaisePropertyChanged("LineProperty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.DateTime> StartDateTime {
            get {
                return this.StartDateTimeField;
            }
            set {
                if ((this.StartDateTimeField.Equals(value) != true)) {
                    this.StartDateTimeField = value;
                    this.RaisePropertyChanged("StartDateTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LineInflectionPointItem", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.VehicleManagement")]
    [System.SerializableAttribute()]
    public partial class LineInflectionPointItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Nullable<ushort> DrivingTooLackThresholdingField;
        
        private System.Nullable<ushort> DrivingTooLongThresholdingField;
        
        private System.Nullable<ushort> MaxSpeedField;
        
        private System.Nullable<byte> OverSpeedDurationField;
        
        private uint PointIDField;
        
        private double PointLatitudeField;
        
        private double PointLongitudeField;
        
        private uint RoadIDField;
        
        private Asiatek.TMS.TerminalOperation.RoadProperty RoadPropertyField;
        
        private byte RoadWidthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<ushort> DrivingTooLackThresholding {
            get {
                return this.DrivingTooLackThresholdingField;
            }
            set {
                if ((this.DrivingTooLackThresholdingField.Equals(value) != true)) {
                    this.DrivingTooLackThresholdingField = value;
                    this.RaisePropertyChanged("DrivingTooLackThresholding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<ushort> DrivingTooLongThresholding {
            get {
                return this.DrivingTooLongThresholdingField;
            }
            set {
                if ((this.DrivingTooLongThresholdingField.Equals(value) != true)) {
                    this.DrivingTooLongThresholdingField = value;
                    this.RaisePropertyChanged("DrivingTooLongThresholding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<ushort> MaxSpeed {
            get {
                return this.MaxSpeedField;
            }
            set {
                if ((this.MaxSpeedField.Equals(value) != true)) {
                    this.MaxSpeedField = value;
                    this.RaisePropertyChanged("MaxSpeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<byte> OverSpeedDuration {
            get {
                return this.OverSpeedDurationField;
            }
            set {
                if ((this.OverSpeedDurationField.Equals(value) != true)) {
                    this.OverSpeedDurationField = value;
                    this.RaisePropertyChanged("OverSpeedDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public uint PointID {
            get {
                return this.PointIDField;
            }
            set {
                if ((this.PointIDField.Equals(value) != true)) {
                    this.PointIDField = value;
                    this.RaisePropertyChanged("PointID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double PointLatitude {
            get {
                return this.PointLatitudeField;
            }
            set {
                if ((this.PointLatitudeField.Equals(value) != true)) {
                    this.PointLatitudeField = value;
                    this.RaisePropertyChanged("PointLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double PointLongitude {
            get {
                return this.PointLongitudeField;
            }
            set {
                if ((this.PointLongitudeField.Equals(value) != true)) {
                    this.PointLongitudeField = value;
                    this.RaisePropertyChanged("PointLongitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public uint RoadID {
            get {
                return this.RoadIDField;
            }
            set {
                if ((this.RoadIDField.Equals(value) != true)) {
                    this.RoadIDField = value;
                    this.RaisePropertyChanged("RoadID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public Asiatek.TMS.TerminalOperation.RoadProperty RoadProperty {
            get {
                return this.RoadPropertyField;
            }
            set {
                if ((this.RoadPropertyField.Equals(value) != true)) {
                    this.RoadPropertyField = value;
                    this.RaisePropertyChanged("RoadProperty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public byte RoadWidth {
            get {
                return this.RoadWidthField;
            }
            set {
                if ((this.RoadWidthField.Equals(value) != true)) {
                    this.RoadWidthField = value;
                    this.RaisePropertyChanged("RoadWidth");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="LineProperty", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.VehicleManagement")]
    public enum LineProperty : ushort {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        根据时间 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        进路线报警给驾驶员 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        进路线报警给平台 = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        出路线报警给驾驶员 = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        出路线报警给平台 = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 61,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoadProperty", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.VehicleManagement")]
    public enum RoadProperty : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        行驶时间 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        限速 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        南纬 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        西经 = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 15,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CameraShotImmediatelyCMDData", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.Multimedia")]
    [System.SerializableAttribute()]
    public partial class CameraShotImmediatelyCMDData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private byte BrightnessField;
        
        private byte ChromaField;
        
        private byte ContrastRatioField;
        
        private byte QualityField;
        
        private Asiatek.TMS.TerminalOperation.Resolution ResolutionField;
        
        private byte SaturationField;
        
        private bool SaveField;
        
        private ushort ShootCMDField;
        
        private ushort TakeIntervalOrRecordDurationField;
        
        private byte TunnelIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public byte Brightness {
            get {
                return this.BrightnessField;
            }
            set {
                if ((this.BrightnessField.Equals(value) != true)) {
                    this.BrightnessField = value;
                    this.RaisePropertyChanged("Brightness");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public byte Chroma {
            get {
                return this.ChromaField;
            }
            set {
                if ((this.ChromaField.Equals(value) != true)) {
                    this.ChromaField = value;
                    this.RaisePropertyChanged("Chroma");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public byte ContrastRatio {
            get {
                return this.ContrastRatioField;
            }
            set {
                if ((this.ContrastRatioField.Equals(value) != true)) {
                    this.ContrastRatioField = value;
                    this.RaisePropertyChanged("ContrastRatio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public byte Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public Asiatek.TMS.TerminalOperation.Resolution Resolution {
            get {
                return this.ResolutionField;
            }
            set {
                if ((this.ResolutionField.Equals(value) != true)) {
                    this.ResolutionField = value;
                    this.RaisePropertyChanged("Resolution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public byte Saturation {
            get {
                return this.SaturationField;
            }
            set {
                if ((this.SaturationField.Equals(value) != true)) {
                    this.SaturationField = value;
                    this.RaisePropertyChanged("Saturation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool Save {
            get {
                return this.SaveField;
            }
            set {
                if ((this.SaveField.Equals(value) != true)) {
                    this.SaveField = value;
                    this.RaisePropertyChanged("Save");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ushort ShootCMD {
            get {
                return this.ShootCMDField;
            }
            set {
                if ((this.ShootCMDField.Equals(value) != true)) {
                    this.ShootCMDField = value;
                    this.RaisePropertyChanged("ShootCMD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ushort TakeIntervalOrRecordDuration {
            get {
                return this.TakeIntervalOrRecordDurationField;
            }
            set {
                if ((this.TakeIntervalOrRecordDurationField.Equals(value) != true)) {
                    this.TakeIntervalOrRecordDurationField = value;
                    this.RaisePropertyChanged("TakeIntervalOrRecordDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public byte TunnelID {
            get {
                return this.TunnelIDField;
            }
            set {
                if ((this.TunnelIDField.Equals(value) != true)) {
                    this.TunnelIDField = value;
                    this.RaisePropertyChanged("TunnelID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Resolution", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.Multimedia")]
    public enum Resolution : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        W320_H240 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        W640_H480 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        W800_H600 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        W1024_H768 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        W176_H144_Qcif = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        W352_H288_Cif = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        W704_H288_HALF_D1 = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        W704_H576_D1 = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultimediaDataRetrievalData", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.Multimedia")]
    [System.SerializableAttribute()]
    public partial class MultimediaDataRetrievalData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime EndDateTimeField;
        
        private Asiatek.TMS.TerminalOperation.MultimediaEventCode MultimediaEventCodeField;
        
        private Asiatek.TMS.TerminalOperation.MultimediaType MultimediaTypeField;
        
        private System.DateTime StartDateTimeField;
        
        private byte TunnelIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime EndDateTime {
            get {
                return this.EndDateTimeField;
            }
            set {
                if ((this.EndDateTimeField.Equals(value) != true)) {
                    this.EndDateTimeField = value;
                    this.RaisePropertyChanged("EndDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Asiatek.TMS.TerminalOperation.MultimediaEventCode MultimediaEventCode {
            get {
                return this.MultimediaEventCodeField;
            }
            set {
                if ((this.MultimediaEventCodeField.Equals(value) != true)) {
                    this.MultimediaEventCodeField = value;
                    this.RaisePropertyChanged("MultimediaEventCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Asiatek.TMS.TerminalOperation.MultimediaType MultimediaType {
            get {
                return this.MultimediaTypeField;
            }
            set {
                if ((this.MultimediaTypeField.Equals(value) != true)) {
                    this.MultimediaTypeField = value;
                    this.RaisePropertyChanged("MultimediaType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime StartDateTime {
            get {
                return this.StartDateTimeField;
            }
            set {
                if ((this.StartDateTimeField.Equals(value) != true)) {
                    this.StartDateTimeField = value;
                    this.RaisePropertyChanged("StartDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public byte TunnelID {
            get {
                return this.TunnelIDField;
            }
            set {
                if ((this.TunnelIDField.Equals(value) != true)) {
                    this.TunnelIDField = value;
                    this.RaisePropertyChanged("TunnelID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultimediaEventCode", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.Multimedia")]
    public enum MultimediaEventCode : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        平台下发指令 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        定时动作 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        抢劫报警触发 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        碰撞侧翻报警触发 = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultimediaType", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.Multimedia")]
    public enum MultimediaType : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        图像 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        音频 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        视频 = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultMultimediaDataRetrievalRespData", Namespace="http://schemas.datacontract.org/2004/07/STDServiceCore")]
    [System.SerializableAttribute()]
    public partial class OperationResultMultimediaDataRetrievalRespData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private Asiatek.TMS.TerminalOperation.OperationResultCode CodeField;
        
        private string MessageField;
        
        private Asiatek.TMS.TerminalOperation.MultimediaDataRetrievalRespData ResultDataField;
        
        private bool StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Asiatek.TMS.TerminalOperation.OperationResultCode Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Asiatek.TMS.TerminalOperation.MultimediaDataRetrievalRespData ResultData {
            get {
                return this.ResultDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultDataField, value) != true)) {
                    this.ResultDataField = value;
                    this.RaisePropertyChanged("ResultData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultimediaDataRetrievalRespData", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.Multimedia")]
    [System.SerializableAttribute()]
    public partial class MultimediaDataRetrievalRespData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private ushort CountField;
        
        private Asiatek.TMS.TerminalOperation.MultimediaRetrievalItem[] MultimediaRetrievalItemsField;
        
        private ushort SerialNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ushort Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Asiatek.TMS.TerminalOperation.MultimediaRetrievalItem[] MultimediaRetrievalItems {
            get {
                return this.MultimediaRetrievalItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.MultimediaRetrievalItemsField, value) != true)) {
                    this.MultimediaRetrievalItemsField = value;
                    this.RaisePropertyChanged("MultimediaRetrievalItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ushort SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((this.SerialNumberField.Equals(value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultimediaRetrievalItem", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.Multimedia")]
    [System.SerializableAttribute()]
    public partial class MultimediaRetrievalItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private Asiatek.TMS.TerminalOperation.BaseLocationData BaseLocationDataField;
        
        private uint IDField;
        
        private Asiatek.TMS.TerminalOperation.MultimediaEventCode MultimediaEventCodeField;
        
        private Asiatek.TMS.TerminalOperation.MultimediaType MultimediaTypeField;
        
        private byte TunnelIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Asiatek.TMS.TerminalOperation.BaseLocationData BaseLocationData {
            get {
                return this.BaseLocationDataField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseLocationDataField, value) != true)) {
                    this.BaseLocationDataField = value;
                    this.RaisePropertyChanged("BaseLocationData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public uint ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Asiatek.TMS.TerminalOperation.MultimediaEventCode MultimediaEventCode {
            get {
                return this.MultimediaEventCodeField;
            }
            set {
                if ((this.MultimediaEventCodeField.Equals(value) != true)) {
                    this.MultimediaEventCodeField = value;
                    this.RaisePropertyChanged("MultimediaEventCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Asiatek.TMS.TerminalOperation.MultimediaType MultimediaType {
            get {
                return this.MultimediaTypeField;
            }
            set {
                if ((this.MultimediaTypeField.Equals(value) != true)) {
                    this.MultimediaTypeField = value;
                    this.RaisePropertyChanged("MultimediaType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public byte TunnelID {
            get {
                return this.TunnelIDField;
            }
            set {
                if ((this.TunnelIDField.Equals(value) != true)) {
                    this.TunnelIDField = value;
                    this.RaisePropertyChanged("TunnelID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseLocationData", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.LocationAlarm")]
    [System.SerializableAttribute()]
    public partial class BaseLocationData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private Asiatek.TMS.TerminalOperation.AlarmFlag AlarmFlagField;
        
        private System.DateTime DateTimeField;
        
        private ushort DirectionField;
        
        private ushort ElevationField;
        
        private double LatitudeField;
        
        private double LongitudeField;
        
        private double SpeedField;
        
        private Asiatek.TMS.TerminalOperation.StateFlag StateFlagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Asiatek.TMS.TerminalOperation.AlarmFlag AlarmFlag {
            get {
                return this.AlarmFlagField;
            }
            set {
                if ((this.AlarmFlagField.Equals(value) != true)) {
                    this.AlarmFlagField = value;
                    this.RaisePropertyChanged("AlarmFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime DateTime {
            get {
                return this.DateTimeField;
            }
            set {
                if ((this.DateTimeField.Equals(value) != true)) {
                    this.DateTimeField = value;
                    this.RaisePropertyChanged("DateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ushort Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((this.DirectionField.Equals(value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ushort Elevation {
            get {
                return this.ElevationField;
            }
            set {
                if ((this.ElevationField.Equals(value) != true)) {
                    this.ElevationField = value;
                    this.RaisePropertyChanged("Elevation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((this.SpeedField.Equals(value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Asiatek.TMS.TerminalOperation.StateFlag StateFlag {
            get {
                return this.StateFlagField;
            }
            set {
                if ((this.StateFlagField.Equals(value) != true)) {
                    this.StateFlagField = value;
                    this.RaisePropertyChanged("StateFlag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="StateFlag", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.LocationAlarm")]
    public enum StateFlag : uint {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ACC开 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        定位 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        南纬 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        西经 = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        停运状态 = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        经纬度已经保密插件加密 = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        半载 = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        满载 = 768,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        车辆油路断开 = 1024,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        车辆电路断开 = 2048,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        车门加锁 = 4096,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        门1开或前门开 = 8192,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        门2开或中门开 = 16384,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        门3开或后门开 = 32768,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        门4开或驾驶席门开 = 65536,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        门5开 = 131072,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        使用GPS卫星进行定位 = 262144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        使用北斗卫星进行定位 = 524288,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        使用GLONASS卫星进行定位 = 1048576,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        使用Galileo卫星进行定位 = 2097152,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        路段行驶时间不足或过长 = 4194304,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 8388415,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultimediaDataUploadCMDData", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.Multimedia")]
    [System.SerializableAttribute()]
    public partial class MultimediaDataUploadCMDData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool DeleteField;
        
        private System.DateTime EndDateTimeField;
        
        private Asiatek.TMS.TerminalOperation.MultimediaEventCode MultimediaEventCodeField;
        
        private Asiatek.TMS.TerminalOperation.MultimediaType MultimediaTypeField;
        
        private System.DateTime StartDateTimeField;
        
        private byte TunnelIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool Delete {
            get {
                return this.DeleteField;
            }
            set {
                if ((this.DeleteField.Equals(value) != true)) {
                    this.DeleteField = value;
                    this.RaisePropertyChanged("Delete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime EndDateTime {
            get {
                return this.EndDateTimeField;
            }
            set {
                if ((this.EndDateTimeField.Equals(value) != true)) {
                    this.EndDateTimeField = value;
                    this.RaisePropertyChanged("EndDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Asiatek.TMS.TerminalOperation.MultimediaEventCode MultimediaEventCode {
            get {
                return this.MultimediaEventCodeField;
            }
            set {
                if ((this.MultimediaEventCodeField.Equals(value) != true)) {
                    this.MultimediaEventCodeField = value;
                    this.RaisePropertyChanged("MultimediaEventCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Asiatek.TMS.TerminalOperation.MultimediaType MultimediaType {
            get {
                return this.MultimediaTypeField;
            }
            set {
                if ((this.MultimediaTypeField.Equals(value) != true)) {
                    this.MultimediaTypeField = value;
                    this.RaisePropertyChanged("MultimediaType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime StartDateTime {
            get {
                return this.StartDateTimeField;
            }
            set {
                if ((this.StartDateTimeField.Equals(value) != true)) {
                    this.StartDateTimeField = value;
                    this.RaisePropertyChanged("StartDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public byte TunnelID {
            get {
                return this.TunnelIDField;
            }
            set {
                if ((this.TunnelIDField.Equals(value) != true)) {
                    this.TunnelIDField = value;
                    this.RaisePropertyChanged("TunnelID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultimediaDataSingleUploadCMDData", Namespace="http://schemas.datacontract.org/2004/07/STD808Core.Multimedia")]
    [System.SerializableAttribute()]
    public partial class MultimediaDataSingleUploadCMDData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool DeleteField;
        
        private uint IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool Delete {
            get {
                return this.DeleteField;
            }
            set {
                if ((this.DeleteField.Equals(value) != true)) {
                    this.DeleteField = value;
                    this.RaisePropertyChanged("Delete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public uint ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TerminalOperation.ITerminalOperation")]
    public interface ITerminalOperation {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/QuerySpecifiedTerminalParas", ReplyAction="http://tempuri.org/ITerminalOperation/QuerySpecifiedTerminalParasResponse")]
        Asiatek.TMS.TerminalOperation.OperationResultQueryTerminalParaRespData QuerySpecifiedTerminalParas(string terminalCode, Asiatek.TMS.TerminalOperation.QuerySpecifiedTerminalParasData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/QuerySpecifiedTerminalParas", ReplyAction="http://tempuri.org/ITerminalOperation/QuerySpecifiedTerminalParasResponse")]
        System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultQueryTerminalParaRespData> QuerySpecifiedTerminalParasAsync(string terminalCode, Asiatek.TMS.TerminalOperation.QuerySpecifiedTerminalParasData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/TerminalControl", ReplyAction="http://tempuri.org/ITerminalOperation/TerminalControlResponse")]
        Asiatek.TMS.TerminalOperation.OperationResultGeneralRep TerminalControl(string terminalCode, Asiatek.TMS.TerminalOperation.TerminalControlData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/TerminalControl", ReplyAction="http://tempuri.org/ITerminalOperation/TerminalControlResponse")]
        System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> TerminalControlAsync(string terminalCode, Asiatek.TMS.TerminalOperation.TerminalControlData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/SetTerminalParas", ReplyAction="http://tempuri.org/ITerminalOperation/SetTerminalParasResponse")]
        Asiatek.TMS.TerminalOperation.OperationResultGeneralRep SetTerminalParas(string terminalCode, Asiatek.TMS.TerminalOperation.TerminalParasSettingData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/SetTerminalParas", ReplyAction="http://tempuri.org/ITerminalOperation/SetTerminalParasResponse")]
        System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> SetTerminalParasAsync(string terminalCode, Asiatek.TMS.TerminalOperation.TerminalParasSettingData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/ConfirmAlarm", ReplyAction="http://tempuri.org/ITerminalOperation/ConfirmAlarmResponse")]
        Asiatek.TMS.TerminalOperation.OperationResultGeneralRep ConfirmAlarm(string terminalCode, Asiatek.TMS.TerminalOperation.ManualConfirmAlarmData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/ConfirmAlarm", ReplyAction="http://tempuri.org/ITerminalOperation/ConfirmAlarmResponse")]
        System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> ConfirmAlarmAsync(string terminalCode, Asiatek.TMS.TerminalOperation.ManualConfirmAlarmData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/SendTextInfo", ReplyAction="http://tempuri.org/ITerminalOperation/SendTextInfoResponse")]
        Asiatek.TMS.TerminalOperation.OperationResultGeneralRep SendTextInfo(string terminalCode, Asiatek.TMS.TerminalOperation.TextInformationData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/SendTextInfo", ReplyAction="http://tempuri.org/ITerminalOperation/SendTextInfoResponse")]
        System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> SendTextInfoAsync(string terminalCode, Asiatek.TMS.TerminalOperation.TextInformationData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/SetEvent", ReplyAction="http://tempuri.org/ITerminalOperation/SetEventResponse")]
        Asiatek.TMS.TerminalOperation.OperationResultGeneralRep SetEvent(string terminalCode, Asiatek.TMS.TerminalOperation.EventSettingData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/SetEvent", ReplyAction="http://tempuri.org/ITerminalOperation/SetEventResponse")]
        System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> SetEventAsync(string terminalCode, Asiatek.TMS.TerminalOperation.EventSettingData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/SendQuestion", ReplyAction="http://tempuri.org/ITerminalOperation/SendQuestionResponse")]
        Asiatek.TMS.TerminalOperation.OperationResultGeneralRep SendQuestion(string terminalCode, Asiatek.TMS.TerminalOperation.QuestionSendingData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/SendQuestion", ReplyAction="http://tempuri.org/ITerminalOperation/SendQuestionResponse")]
        System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> SendQuestionAsync(string terminalCode, Asiatek.TMS.TerminalOperation.QuestionSendingData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/SendTelCallBack", ReplyAction="http://tempuri.org/ITerminalOperation/SendTelCallBackResponse")]
        Asiatek.TMS.TerminalOperation.OperationResultGeneralRep SendTelCallBack(string terminalCode, Asiatek.TMS.TerminalOperation.TelphoneCallBackData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/SendTelCallBack", ReplyAction="http://tempuri.org/ITerminalOperation/SendTelCallBackResponse")]
        System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> SendTelCallBackAsync(string terminalCode, Asiatek.TMS.TerminalOperation.TelphoneCallBackData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/SetTelphone", ReplyAction="http://tempuri.org/ITerminalOperation/SetTelphoneResponse")]
        Asiatek.TMS.TerminalOperation.OperationResultGeneralRep SetTelphone(string terminalCode, Asiatek.TMS.TerminalOperation.TelphoneBookSettingData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/SetTelphone", ReplyAction="http://tempuri.org/ITerminalOperation/SetTelphoneResponse")]
        System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> SetTelphoneAsync(string terminalCode, Asiatek.TMS.TerminalOperation.TelphoneBookSettingData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/SetCircularRegion", ReplyAction="http://tempuri.org/ITerminalOperation/SetCircularRegionResponse")]
        Asiatek.TMS.TerminalOperation.OperationResultGeneralRep SetCircularRegion(string terminalCode, Asiatek.TMS.TerminalOperation.CircularRegionSettingData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/SetCircularRegion", ReplyAction="http://tempuri.org/ITerminalOperation/SetCircularRegionResponse")]
        System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> SetCircularRegionAsync(string terminalCode, Asiatek.TMS.TerminalOperation.CircularRegionSettingData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/DeleteCircularRegion", ReplyAction="http://tempuri.org/ITerminalOperation/DeleteCircularRegionResponse")]
        Asiatek.TMS.TerminalOperation.OperationResultGeneralRep DeleteCircularRegion(string terminalCode, Asiatek.TMS.TerminalOperation.RegionLineDeletionData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/DeleteCircularRegion", ReplyAction="http://tempuri.org/ITerminalOperation/DeleteCircularRegionResponse")]
        System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> DeleteCircularRegionAsync(string terminalCode, Asiatek.TMS.TerminalOperation.RegionLineDeletionData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/SetRectangularRegion", ReplyAction="http://tempuri.org/ITerminalOperation/SetRectangularRegionResponse")]
        Asiatek.TMS.TerminalOperation.OperationResultGeneralRep SetRectangularRegion(string terminalCode, Asiatek.TMS.TerminalOperation.RectangularRegionSettingData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/SetRectangularRegion", ReplyAction="http://tempuri.org/ITerminalOperation/SetRectangularRegionResponse")]
        System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> SetRectangularRegionAsync(string terminalCode, Asiatek.TMS.TerminalOperation.RectangularRegionSettingData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/DeleteRectangularRegion", ReplyAction="http://tempuri.org/ITerminalOperation/DeleteRectangularRegionResponse")]
        Asiatek.TMS.TerminalOperation.OperationResultGeneralRep DeleteRectangularRegion(string terminalCode, Asiatek.TMS.TerminalOperation.RegionLineDeletionData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/DeleteRectangularRegion", ReplyAction="http://tempuri.org/ITerminalOperation/DeleteRectangularRegionResponse")]
        System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> DeleteRectangularRegionAsync(string terminalCode, Asiatek.TMS.TerminalOperation.RegionLineDeletionData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/SetPolygonRegion", ReplyAction="http://tempuri.org/ITerminalOperation/SetPolygonRegionResponse")]
        Asiatek.TMS.TerminalOperation.OperationResultGeneralRep SetPolygonRegion(string terminalCode, Asiatek.TMS.TerminalOperation.PolygonRegionSettingData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/SetPolygonRegion", ReplyAction="http://tempuri.org/ITerminalOperation/SetPolygonRegionResponse")]
        System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> SetPolygonRegionAsync(string terminalCode, Asiatek.TMS.TerminalOperation.PolygonRegionSettingData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/DeletePolygonRegion", ReplyAction="http://tempuri.org/ITerminalOperation/DeletePolygonRegionResponse")]
        Asiatek.TMS.TerminalOperation.OperationResultGeneralRep DeletePolygonRegion(string terminalCode, Asiatek.TMS.TerminalOperation.RegionLineDeletionData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/DeletePolygonRegion", ReplyAction="http://tempuri.org/ITerminalOperation/DeletePolygonRegionResponse")]
        System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> DeletePolygonRegionAsync(string terminalCode, Asiatek.TMS.TerminalOperation.RegionLineDeletionData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/SetLine", ReplyAction="http://tempuri.org/ITerminalOperation/SetLineResponse")]
        Asiatek.TMS.TerminalOperation.OperationResultGeneralRep SetLine(string terminalCode, Asiatek.TMS.TerminalOperation.LineSettingData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/SetLine", ReplyAction="http://tempuri.org/ITerminalOperation/SetLineResponse")]
        System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> SetLineAsync(string terminalCode, Asiatek.TMS.TerminalOperation.LineSettingData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/DeleteLine", ReplyAction="http://tempuri.org/ITerminalOperation/DeleteLineResponse")]
        Asiatek.TMS.TerminalOperation.OperationResultGeneralRep DeleteLine(string terminalCode, Asiatek.TMS.TerminalOperation.RegionLineDeletionData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/DeleteLine", ReplyAction="http://tempuri.org/ITerminalOperation/DeleteLineResponse")]
        System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> DeleteLineAsync(string terminalCode, Asiatek.TMS.TerminalOperation.RegionLineDeletionData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/StartShooting", ReplyAction="http://tempuri.org/ITerminalOperation/StartShootingResponse")]
        Asiatek.TMS.TerminalOperation.OperationResultGeneralRep StartShooting(string terminalCode, Asiatek.TMS.TerminalOperation.CameraShotImmediatelyCMDData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/StartShooting", ReplyAction="http://tempuri.org/ITerminalOperation/StartShootingResponse")]
        System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> StartShootingAsync(string terminalCode, Asiatek.TMS.TerminalOperation.CameraShotImmediatelyCMDData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/RetrieveStoredMultimediaDatas", ReplyAction="http://tempuri.org/ITerminalOperation/RetrieveStoredMultimediaDatasResponse")]
        Asiatek.TMS.TerminalOperation.OperationResultMultimediaDataRetrievalRespData RetrieveStoredMultimediaDatas(string terminalCode, Asiatek.TMS.TerminalOperation.MultimediaDataRetrievalData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/RetrieveStoredMultimediaDatas", ReplyAction="http://tempuri.org/ITerminalOperation/RetrieveStoredMultimediaDatasResponse")]
        System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultMultimediaDataRetrievalRespData> RetrieveStoredMultimediaDatasAsync(string terminalCode, Asiatek.TMS.TerminalOperation.MultimediaDataRetrievalData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/UploadStoredMultimediaDatas", ReplyAction="http://tempuri.org/ITerminalOperation/UploadStoredMultimediaDatasResponse")]
        Asiatek.TMS.TerminalOperation.OperationResultGeneralRep UploadStoredMultimediaDatas(string terminalCode, Asiatek.TMS.TerminalOperation.MultimediaDataUploadCMDData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/UploadStoredMultimediaDatas", ReplyAction="http://tempuri.org/ITerminalOperation/UploadStoredMultimediaDatasResponse")]
        System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> UploadStoredMultimediaDatasAsync(string terminalCode, Asiatek.TMS.TerminalOperation.MultimediaDataUploadCMDData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/UploadSingleStoredMultimediaData", ReplyAction="http://tempuri.org/ITerminalOperation/UploadSingleStoredMultimediaDataResponse")]
        Asiatek.TMS.TerminalOperation.OperationResultGeneralRep UploadSingleStoredMultimediaData(string terminalCode, Asiatek.TMS.TerminalOperation.MultimediaDataSingleUploadCMDData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalOperation/UploadSingleStoredMultimediaData", ReplyAction="http://tempuri.org/ITerminalOperation/UploadSingleStoredMultimediaDataResponse")]
        System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> UploadSingleStoredMultimediaDataAsync(string terminalCode, Asiatek.TMS.TerminalOperation.MultimediaDataSingleUploadCMDData data);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITerminalOperationChannel : Asiatek.TMS.TerminalOperation.ITerminalOperation, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TerminalOperationClient : System.ServiceModel.ClientBase<Asiatek.TMS.TerminalOperation.ITerminalOperation>, Asiatek.TMS.TerminalOperation.ITerminalOperation {
        
        public TerminalOperationClient() {
        }
        
        public TerminalOperationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TerminalOperationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TerminalOperationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TerminalOperationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Asiatek.TMS.TerminalOperation.OperationResultQueryTerminalParaRespData QuerySpecifiedTerminalParas(string terminalCode, Asiatek.TMS.TerminalOperation.QuerySpecifiedTerminalParasData data) {
            return base.Channel.QuerySpecifiedTerminalParas(terminalCode, data);
        }
        
        public System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultQueryTerminalParaRespData> QuerySpecifiedTerminalParasAsync(string terminalCode, Asiatek.TMS.TerminalOperation.QuerySpecifiedTerminalParasData data) {
            return base.Channel.QuerySpecifiedTerminalParasAsync(terminalCode, data);
        }
        
        public Asiatek.TMS.TerminalOperation.OperationResultGeneralRep TerminalControl(string terminalCode, Asiatek.TMS.TerminalOperation.TerminalControlData data) {
            return base.Channel.TerminalControl(terminalCode, data);
        }
        
        public System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> TerminalControlAsync(string terminalCode, Asiatek.TMS.TerminalOperation.TerminalControlData data) {
            return base.Channel.TerminalControlAsync(terminalCode, data);
        }
        
        public Asiatek.TMS.TerminalOperation.OperationResultGeneralRep SetTerminalParas(string terminalCode, Asiatek.TMS.TerminalOperation.TerminalParasSettingData data) {
            return base.Channel.SetTerminalParas(terminalCode, data);
        }
        
        public System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> SetTerminalParasAsync(string terminalCode, Asiatek.TMS.TerminalOperation.TerminalParasSettingData data) {
            return base.Channel.SetTerminalParasAsync(terminalCode, data);
        }
        
        public Asiatek.TMS.TerminalOperation.OperationResultGeneralRep ConfirmAlarm(string terminalCode, Asiatek.TMS.TerminalOperation.ManualConfirmAlarmData data) {
            return base.Channel.ConfirmAlarm(terminalCode, data);
        }
        
        public System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> ConfirmAlarmAsync(string terminalCode, Asiatek.TMS.TerminalOperation.ManualConfirmAlarmData data) {
            return base.Channel.ConfirmAlarmAsync(terminalCode, data);
        }
        
        public Asiatek.TMS.TerminalOperation.OperationResultGeneralRep SendTextInfo(string terminalCode, Asiatek.TMS.TerminalOperation.TextInformationData data) {
            return base.Channel.SendTextInfo(terminalCode, data);
        }
        
        public System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> SendTextInfoAsync(string terminalCode, Asiatek.TMS.TerminalOperation.TextInformationData data) {
            return base.Channel.SendTextInfoAsync(terminalCode, data);
        }
        
        public Asiatek.TMS.TerminalOperation.OperationResultGeneralRep SetEvent(string terminalCode, Asiatek.TMS.TerminalOperation.EventSettingData data) {
            return base.Channel.SetEvent(terminalCode, data);
        }
        
        public System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> SetEventAsync(string terminalCode, Asiatek.TMS.TerminalOperation.EventSettingData data) {
            return base.Channel.SetEventAsync(terminalCode, data);
        }
        
        public Asiatek.TMS.TerminalOperation.OperationResultGeneralRep SendQuestion(string terminalCode, Asiatek.TMS.TerminalOperation.QuestionSendingData data) {
            return base.Channel.SendQuestion(terminalCode, data);
        }
        
        public System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> SendQuestionAsync(string terminalCode, Asiatek.TMS.TerminalOperation.QuestionSendingData data) {
            return base.Channel.SendQuestionAsync(terminalCode, data);
        }
        
        public Asiatek.TMS.TerminalOperation.OperationResultGeneralRep SendTelCallBack(string terminalCode, Asiatek.TMS.TerminalOperation.TelphoneCallBackData data) {
            return base.Channel.SendTelCallBack(terminalCode, data);
        }
        
        public System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> SendTelCallBackAsync(string terminalCode, Asiatek.TMS.TerminalOperation.TelphoneCallBackData data) {
            return base.Channel.SendTelCallBackAsync(terminalCode, data);
        }
        
        public Asiatek.TMS.TerminalOperation.OperationResultGeneralRep SetTelphone(string terminalCode, Asiatek.TMS.TerminalOperation.TelphoneBookSettingData data) {
            return base.Channel.SetTelphone(terminalCode, data);
        }
        
        public System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> SetTelphoneAsync(string terminalCode, Asiatek.TMS.TerminalOperation.TelphoneBookSettingData data) {
            return base.Channel.SetTelphoneAsync(terminalCode, data);
        }
        
        public Asiatek.TMS.TerminalOperation.OperationResultGeneralRep SetCircularRegion(string terminalCode, Asiatek.TMS.TerminalOperation.CircularRegionSettingData data) {
            return base.Channel.SetCircularRegion(terminalCode, data);
        }
        
        public System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> SetCircularRegionAsync(string terminalCode, Asiatek.TMS.TerminalOperation.CircularRegionSettingData data) {
            return base.Channel.SetCircularRegionAsync(terminalCode, data);
        }
        
        public Asiatek.TMS.TerminalOperation.OperationResultGeneralRep DeleteCircularRegion(string terminalCode, Asiatek.TMS.TerminalOperation.RegionLineDeletionData data) {
            return base.Channel.DeleteCircularRegion(terminalCode, data);
        }
        
        public System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> DeleteCircularRegionAsync(string terminalCode, Asiatek.TMS.TerminalOperation.RegionLineDeletionData data) {
            return base.Channel.DeleteCircularRegionAsync(terminalCode, data);
        }
        
        public Asiatek.TMS.TerminalOperation.OperationResultGeneralRep SetRectangularRegion(string terminalCode, Asiatek.TMS.TerminalOperation.RectangularRegionSettingData data) {
            return base.Channel.SetRectangularRegion(terminalCode, data);
        }
        
        public System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> SetRectangularRegionAsync(string terminalCode, Asiatek.TMS.TerminalOperation.RectangularRegionSettingData data) {
            return base.Channel.SetRectangularRegionAsync(terminalCode, data);
        }
        
        public Asiatek.TMS.TerminalOperation.OperationResultGeneralRep DeleteRectangularRegion(string terminalCode, Asiatek.TMS.TerminalOperation.RegionLineDeletionData data) {
            return base.Channel.DeleteRectangularRegion(terminalCode, data);
        }
        
        public System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> DeleteRectangularRegionAsync(string terminalCode, Asiatek.TMS.TerminalOperation.RegionLineDeletionData data) {
            return base.Channel.DeleteRectangularRegionAsync(terminalCode, data);
        }
        
        public Asiatek.TMS.TerminalOperation.OperationResultGeneralRep SetPolygonRegion(string terminalCode, Asiatek.TMS.TerminalOperation.PolygonRegionSettingData data) {
            return base.Channel.SetPolygonRegion(terminalCode, data);
        }
        
        public System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> SetPolygonRegionAsync(string terminalCode, Asiatek.TMS.TerminalOperation.PolygonRegionSettingData data) {
            return base.Channel.SetPolygonRegionAsync(terminalCode, data);
        }
        
        public Asiatek.TMS.TerminalOperation.OperationResultGeneralRep DeletePolygonRegion(string terminalCode, Asiatek.TMS.TerminalOperation.RegionLineDeletionData data) {
            return base.Channel.DeletePolygonRegion(terminalCode, data);
        }
        
        public System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> DeletePolygonRegionAsync(string terminalCode, Asiatek.TMS.TerminalOperation.RegionLineDeletionData data) {
            return base.Channel.DeletePolygonRegionAsync(terminalCode, data);
        }
        
        public Asiatek.TMS.TerminalOperation.OperationResultGeneralRep SetLine(string terminalCode, Asiatek.TMS.TerminalOperation.LineSettingData data) {
            return base.Channel.SetLine(terminalCode, data);
        }
        
        public System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> SetLineAsync(string terminalCode, Asiatek.TMS.TerminalOperation.LineSettingData data) {
            return base.Channel.SetLineAsync(terminalCode, data);
        }
        
        public Asiatek.TMS.TerminalOperation.OperationResultGeneralRep DeleteLine(string terminalCode, Asiatek.TMS.TerminalOperation.RegionLineDeletionData data) {
            return base.Channel.DeleteLine(terminalCode, data);
        }
        
        public System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> DeleteLineAsync(string terminalCode, Asiatek.TMS.TerminalOperation.RegionLineDeletionData data) {
            return base.Channel.DeleteLineAsync(terminalCode, data);
        }
        
        public Asiatek.TMS.TerminalOperation.OperationResultGeneralRep StartShooting(string terminalCode, Asiatek.TMS.TerminalOperation.CameraShotImmediatelyCMDData data) {
            return base.Channel.StartShooting(terminalCode, data);
        }
        
        public System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> StartShootingAsync(string terminalCode, Asiatek.TMS.TerminalOperation.CameraShotImmediatelyCMDData data) {
            return base.Channel.StartShootingAsync(terminalCode, data);
        }
        
        public Asiatek.TMS.TerminalOperation.OperationResultMultimediaDataRetrievalRespData RetrieveStoredMultimediaDatas(string terminalCode, Asiatek.TMS.TerminalOperation.MultimediaDataRetrievalData data) {
            return base.Channel.RetrieveStoredMultimediaDatas(terminalCode, data);
        }
        
        public System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultMultimediaDataRetrievalRespData> RetrieveStoredMultimediaDatasAsync(string terminalCode, Asiatek.TMS.TerminalOperation.MultimediaDataRetrievalData data) {
            return base.Channel.RetrieveStoredMultimediaDatasAsync(terminalCode, data);
        }
        
        public Asiatek.TMS.TerminalOperation.OperationResultGeneralRep UploadStoredMultimediaDatas(string terminalCode, Asiatek.TMS.TerminalOperation.MultimediaDataUploadCMDData data) {
            return base.Channel.UploadStoredMultimediaDatas(terminalCode, data);
        }
        
        public System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> UploadStoredMultimediaDatasAsync(string terminalCode, Asiatek.TMS.TerminalOperation.MultimediaDataUploadCMDData data) {
            return base.Channel.UploadStoredMultimediaDatasAsync(terminalCode, data);
        }
        
        public Asiatek.TMS.TerminalOperation.OperationResultGeneralRep UploadSingleStoredMultimediaData(string terminalCode, Asiatek.TMS.TerminalOperation.MultimediaDataSingleUploadCMDData data) {
            return base.Channel.UploadSingleStoredMultimediaData(terminalCode, data);
        }
        
        public System.Threading.Tasks.Task<Asiatek.TMS.TerminalOperation.OperationResultGeneralRep> UploadSingleStoredMultimediaDataAsync(string terminalCode, Asiatek.TMS.TerminalOperation.MultimediaDataSingleUploadCMDData data) {
            return base.Channel.UploadSingleStoredMultimediaDataAsync(terminalCode, data);
        }
    }
}
