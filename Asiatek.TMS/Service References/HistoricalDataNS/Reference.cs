//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Asiatek.TMS.HistoricalDataNS {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HistoricalDataNS.HistoricalDataSoap")]
    public interface HistoricalDataSoap {
        
        // CODEGEN: 命名空间 http://tempuri.org/ 的元素名称 GetHistorySignalsResult 以后生成的消息协定未标记为 nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetHistorySignals", ReplyAction="*")]
        Asiatek.TMS.HistoricalDataNS.GetHistorySignalsResponse GetHistorySignals(Asiatek.TMS.HistoricalDataNS.GetHistorySignalsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetHistorySignals", ReplyAction="*")]
        System.Threading.Tasks.Task<Asiatek.TMS.HistoricalDataNS.GetHistorySignalsResponse> GetHistorySignalsAsync(Asiatek.TMS.HistoricalDataNS.GetHistorySignalsRequest request);
        
        // CODEGEN: 命名空间 http://tempuri.org/ 的元素名称 GetAllExceptionsResult 以后生成的消息协定未标记为 nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllExceptions", ReplyAction="*")]
        Asiatek.TMS.HistoricalDataNS.GetAllExceptionsResponse GetAllExceptions(Asiatek.TMS.HistoricalDataNS.GetAllExceptionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllExceptions", ReplyAction="*")]
        System.Threading.Tasks.Task<Asiatek.TMS.HistoricalDataNS.GetAllExceptionsResponse> GetAllExceptionsAsync(Asiatek.TMS.HistoricalDataNS.GetAllExceptionsRequest request);
        
        // CODEGEN: 命名空间 http://tempuri.org/ 的元素名称 GetExceptionsResult 以后生成的消息协定未标记为 nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetExceptions", ReplyAction="*")]
        Asiatek.TMS.HistoricalDataNS.GetExceptionsResponse GetExceptions(Asiatek.TMS.HistoricalDataNS.GetExceptionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetExceptions", ReplyAction="*")]
        System.Threading.Tasks.Task<Asiatek.TMS.HistoricalDataNS.GetExceptionsResponse> GetExceptionsAsync(Asiatek.TMS.HistoricalDataNS.GetExceptionsRequest request);
        
        // CODEGEN: 命名空间 http://tempuri.org/ 的元素名称 DealUser 以后生成的消息协定未标记为 nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetExceptionsAndDealInfo", ReplyAction="*")]
        Asiatek.TMS.HistoricalDataNS.GetExceptionsAndDealInfoResponse GetExceptionsAndDealInfo(Asiatek.TMS.HistoricalDataNS.GetExceptionsAndDealInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetExceptionsAndDealInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<Asiatek.TMS.HistoricalDataNS.GetExceptionsAndDealInfoResponse> GetExceptionsAndDealInfoAsync(Asiatek.TMS.HistoricalDataNS.GetExceptionsAndDealInfoRequest request);
        
        // CODEGEN: 命名空间 http://tempuri.org/ 的元素名称 GetVehicleExceptionsForEquipmenResult 以后生成的消息协定未标记为 nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetVehicleExceptionsForEquipmen", ReplyAction="*")]
        Asiatek.TMS.HistoricalDataNS.GetVehicleExceptionsForEquipmenResponse GetVehicleExceptionsForEquipmen(Asiatek.TMS.HistoricalDataNS.GetVehicleExceptionsForEquipmenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetVehicleExceptionsForEquipmen", ReplyAction="*")]
        System.Threading.Tasks.Task<Asiatek.TMS.HistoricalDataNS.GetVehicleExceptionsForEquipmenResponse> GetVehicleExceptionsForEquipmenAsync(Asiatek.TMS.HistoricalDataNS.GetVehicleExceptionsForEquipmenRequest request);
        
        // CODEGEN: 命名空间 http://tempuri.org/ 的元素名称 GetExceptionsForMainPowerResult 以后生成的消息协定未标记为 nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetExceptionsForMainPower", ReplyAction="*")]
        Asiatek.TMS.HistoricalDataNS.GetExceptionsForMainPowerResponse GetExceptionsForMainPower(Asiatek.TMS.HistoricalDataNS.GetExceptionsForMainPowerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetExceptionsForMainPower", ReplyAction="*")]
        System.Threading.Tasks.Task<Asiatek.TMS.HistoricalDataNS.GetExceptionsForMainPowerResponse> GetExceptionsForMainPowerAsync(Asiatek.TMS.HistoricalDataNS.GetExceptionsForMainPowerRequest request);
        
        // CODEGEN: 命名空间 http://tempuri.org/ 的元素名称 GetExceptionsForMapLineResult 以后生成的消息协定未标记为 nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetExceptionsForMapLine", ReplyAction="*")]
        Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapLineResponse GetExceptionsForMapLine(Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapLineRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetExceptionsForMapLine", ReplyAction="*")]
        System.Threading.Tasks.Task<Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapLineResponse> GetExceptionsForMapLineAsync(Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapLineRequest request);
        
        // CODEGEN: 命名空间 http://tempuri.org/ 的元素名称 RegionID 以后生成的消息协定未标记为 nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetExceptionsForMapRegion", ReplyAction="*")]
        Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapRegionResponse GetExceptionsForMapRegion(Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapRegionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetExceptionsForMapRegion", ReplyAction="*")]
        System.Threading.Tasks.Task<Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapRegionResponse> GetExceptionsForMapRegionAsync(Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapRegionRequest request);
        
        // CODEGEN: 命名空间 http://tempuri.org/ 的元素名称 GetVehicleDistanceResult 以后生成的消息协定未标记为 nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetVehicleDistance", ReplyAction="*")]
        Asiatek.TMS.HistoricalDataNS.GetVehicleDistanceResponse GetVehicleDistance(Asiatek.TMS.HistoricalDataNS.GetVehicleDistanceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetVehicleDistance", ReplyAction="*")]
        System.Threading.Tasks.Task<Asiatek.TMS.HistoricalDataNS.GetVehicleDistanceResponse> GetVehicleDistanceAsync(Asiatek.TMS.HistoricalDataNS.GetVehicleDistanceRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetHistorySignalsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetHistorySignals", Namespace="http://tempuri.org/", Order=0)]
        public Asiatek.TMS.HistoricalDataNS.GetHistorySignalsRequestBody Body;
        
        public GetHistorySignalsRequest() {
        }
        
        public GetHistorySignalsRequest(Asiatek.TMS.HistoricalDataNS.GetHistorySignalsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetHistorySignalsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int VehicleID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.DateTime StartDateTime;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime EndDateTime;
        
        public GetHistorySignalsRequestBody() {
        }
        
        public GetHistorySignalsRequestBody(int VehicleID, System.DateTime StartDateTime, System.DateTime EndDateTime) {
            this.VehicleID = VehicleID;
            this.StartDateTime = StartDateTime;
            this.EndDateTime = EndDateTime;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetHistorySignalsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetHistorySignalsResponse", Namespace="http://tempuri.org/", Order=0)]
        public Asiatek.TMS.HistoricalDataNS.GetHistorySignalsResponseBody Body;
        
        public GetHistorySignalsResponse() {
        }
        
        public GetHistorySignalsResponse(Asiatek.TMS.HistoricalDataNS.GetHistorySignalsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetHistorySignalsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetHistorySignalsResult;
        
        public GetHistorySignalsResponseBody() {
        }
        
        public GetHistorySignalsResponseBody(string GetHistorySignalsResult) {
            this.GetHistorySignalsResult = GetHistorySignalsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAllExceptionsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAllExceptions", Namespace="http://tempuri.org/", Order=0)]
        public Asiatek.TMS.HistoricalDataNS.GetAllExceptionsRequestBody Body;
        
        public GetAllExceptionsRequest() {
        }
        
        public GetAllExceptionsRequest(Asiatek.TMS.HistoricalDataNS.GetAllExceptionsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetAllExceptionsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int VehicleID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.DateTime StartDateTime;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime EndDateTime;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int UserID;
        
        public GetAllExceptionsRequestBody() {
        }
        
        public GetAllExceptionsRequestBody(int VehicleID, System.DateTime StartDateTime, System.DateTime EndDateTime, int UserID) {
            this.VehicleID = VehicleID;
            this.StartDateTime = StartDateTime;
            this.EndDateTime = EndDateTime;
            this.UserID = UserID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAllExceptionsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAllExceptionsResponse", Namespace="http://tempuri.org/", Order=0)]
        public Asiatek.TMS.HistoricalDataNS.GetAllExceptionsResponseBody Body;
        
        public GetAllExceptionsResponse() {
        }
        
        public GetAllExceptionsResponse(Asiatek.TMS.HistoricalDataNS.GetAllExceptionsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetAllExceptionsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetAllExceptionsResult;
        
        public GetAllExceptionsResponseBody() {
        }
        
        public GetAllExceptionsResponseBody(string GetAllExceptionsResult) {
            this.GetAllExceptionsResult = GetAllExceptionsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetExceptionsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetExceptions", Namespace="http://tempuri.org/", Order=0)]
        public Asiatek.TMS.HistoricalDataNS.GetExceptionsRequestBody Body;
        
        public GetExceptionsRequest() {
        }
        
        public GetExceptionsRequest(Asiatek.TMS.HistoricalDataNS.GetExceptionsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetExceptionsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int VehicleID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.DateTime StartDateTime;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime EndDateTime;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int ExceptionTypeID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int UserID;
        
        public GetExceptionsRequestBody() {
        }
        
        public GetExceptionsRequestBody(int VehicleID, System.DateTime StartDateTime, System.DateTime EndDateTime, int ExceptionTypeID, int UserID) {
            this.VehicleID = VehicleID;
            this.StartDateTime = StartDateTime;
            this.EndDateTime = EndDateTime;
            this.ExceptionTypeID = ExceptionTypeID;
            this.UserID = UserID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetExceptionsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetExceptionsResponse", Namespace="http://tempuri.org/", Order=0)]
        public Asiatek.TMS.HistoricalDataNS.GetExceptionsResponseBody Body;
        
        public GetExceptionsResponse() {
        }
        
        public GetExceptionsResponse(Asiatek.TMS.HistoricalDataNS.GetExceptionsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetExceptionsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetExceptionsResult;
        
        public GetExceptionsResponseBody() {
        }
        
        public GetExceptionsResponseBody(string GetExceptionsResult) {
            this.GetExceptionsResult = GetExceptionsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetExceptionsAndDealInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetExceptionsAndDealInfo", Namespace="http://tempuri.org/", Order=0)]
        public Asiatek.TMS.HistoricalDataNS.GetExceptionsAndDealInfoRequestBody Body;
        
        public GetExceptionsAndDealInfoRequest() {
        }
        
        public GetExceptionsAndDealInfoRequest(Asiatek.TMS.HistoricalDataNS.GetExceptionsAndDealInfoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetExceptionsAndDealInfoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int VehicleID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.DateTime StartDateTime;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime EndDateTime;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int ExceptionTypeID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int UserID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string DealUser;
        
        public GetExceptionsAndDealInfoRequestBody() {
        }
        
        public GetExceptionsAndDealInfoRequestBody(int VehicleID, System.DateTime StartDateTime, System.DateTime EndDateTime, int ExceptionTypeID, int UserID, string DealUser) {
            this.VehicleID = VehicleID;
            this.StartDateTime = StartDateTime;
            this.EndDateTime = EndDateTime;
            this.ExceptionTypeID = ExceptionTypeID;
            this.UserID = UserID;
            this.DealUser = DealUser;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetExceptionsAndDealInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetExceptionsAndDealInfoResponse", Namespace="http://tempuri.org/", Order=0)]
        public Asiatek.TMS.HistoricalDataNS.GetExceptionsAndDealInfoResponseBody Body;
        
        public GetExceptionsAndDealInfoResponse() {
        }
        
        public GetExceptionsAndDealInfoResponse(Asiatek.TMS.HistoricalDataNS.GetExceptionsAndDealInfoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetExceptionsAndDealInfoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetExceptionsAndDealInfoResult;
        
        public GetExceptionsAndDealInfoResponseBody() {
        }
        
        public GetExceptionsAndDealInfoResponseBody(string GetExceptionsAndDealInfoResult) {
            this.GetExceptionsAndDealInfoResult = GetExceptionsAndDealInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetVehicleExceptionsForEquipmenRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetVehicleExceptionsForEquipmen", Namespace="http://tempuri.org/", Order=0)]
        public Asiatek.TMS.HistoricalDataNS.GetVehicleExceptionsForEquipmenRequestBody Body;
        
        public GetVehicleExceptionsForEquipmenRequest() {
        }
        
        public GetVehicleExceptionsForEquipmenRequest(Asiatek.TMS.HistoricalDataNS.GetVehicleExceptionsForEquipmenRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetVehicleExceptionsForEquipmenRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int VehicleID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.DateTime StartDateTime;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime EndDateTime;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int ExceptionTypeID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int UserID;
        
        public GetVehicleExceptionsForEquipmenRequestBody() {
        }
        
        public GetVehicleExceptionsForEquipmenRequestBody(int VehicleID, System.DateTime StartDateTime, System.DateTime EndDateTime, int ExceptionTypeID, int UserID) {
            this.VehicleID = VehicleID;
            this.StartDateTime = StartDateTime;
            this.EndDateTime = EndDateTime;
            this.ExceptionTypeID = ExceptionTypeID;
            this.UserID = UserID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetVehicleExceptionsForEquipmenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetVehicleExceptionsForEquipmenResponse", Namespace="http://tempuri.org/", Order=0)]
        public Asiatek.TMS.HistoricalDataNS.GetVehicleExceptionsForEquipmenResponseBody Body;
        
        public GetVehicleExceptionsForEquipmenResponse() {
        }
        
        public GetVehicleExceptionsForEquipmenResponse(Asiatek.TMS.HistoricalDataNS.GetVehicleExceptionsForEquipmenResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetVehicleExceptionsForEquipmenResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetVehicleExceptionsForEquipmenResult;
        
        public GetVehicleExceptionsForEquipmenResponseBody() {
        }
        
        public GetVehicleExceptionsForEquipmenResponseBody(string GetVehicleExceptionsForEquipmenResult) {
            this.GetVehicleExceptionsForEquipmenResult = GetVehicleExceptionsForEquipmenResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetExceptionsForMainPowerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetExceptionsForMainPower", Namespace="http://tempuri.org/", Order=0)]
        public Asiatek.TMS.HistoricalDataNS.GetExceptionsForMainPowerRequestBody Body;
        
        public GetExceptionsForMainPowerRequest() {
        }
        
        public GetExceptionsForMainPowerRequest(Asiatek.TMS.HistoricalDataNS.GetExceptionsForMainPowerRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetExceptionsForMainPowerRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int VehicleID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.DateTime StartDateTime;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime EndDateTime;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int ExceptionTypeID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int UserID;
        
        public GetExceptionsForMainPowerRequestBody() {
        }
        
        public GetExceptionsForMainPowerRequestBody(int VehicleID, System.DateTime StartDateTime, System.DateTime EndDateTime, int ExceptionTypeID, int UserID) {
            this.VehicleID = VehicleID;
            this.StartDateTime = StartDateTime;
            this.EndDateTime = EndDateTime;
            this.ExceptionTypeID = ExceptionTypeID;
            this.UserID = UserID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetExceptionsForMainPowerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetExceptionsForMainPowerResponse", Namespace="http://tempuri.org/", Order=0)]
        public Asiatek.TMS.HistoricalDataNS.GetExceptionsForMainPowerResponseBody Body;
        
        public GetExceptionsForMainPowerResponse() {
        }
        
        public GetExceptionsForMainPowerResponse(Asiatek.TMS.HistoricalDataNS.GetExceptionsForMainPowerResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetExceptionsForMainPowerResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetExceptionsForMainPowerResult;
        
        public GetExceptionsForMainPowerResponseBody() {
        }
        
        public GetExceptionsForMainPowerResponseBody(string GetExceptionsForMainPowerResult) {
            this.GetExceptionsForMainPowerResult = GetExceptionsForMainPowerResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetExceptionsForMapLineRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetExceptionsForMapLine", Namespace="http://tempuri.org/", Order=0)]
        public Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapLineRequestBody Body;
        
        public GetExceptionsForMapLineRequest() {
        }
        
        public GetExceptionsForMapLineRequest(Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapLineRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetExceptionsForMapLineRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int VehicleID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.DateTime StartDateTime;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime EndDateTime;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int ExceptionTypeID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int LineID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int UserID;
        
        public GetExceptionsForMapLineRequestBody() {
        }
        
        public GetExceptionsForMapLineRequestBody(int VehicleID, System.DateTime StartDateTime, System.DateTime EndDateTime, int ExceptionTypeID, int LineID, int UserID) {
            this.VehicleID = VehicleID;
            this.StartDateTime = StartDateTime;
            this.EndDateTime = EndDateTime;
            this.ExceptionTypeID = ExceptionTypeID;
            this.LineID = LineID;
            this.UserID = UserID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetExceptionsForMapLineResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetExceptionsForMapLineResponse", Namespace="http://tempuri.org/", Order=0)]
        public Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapLineResponseBody Body;
        
        public GetExceptionsForMapLineResponse() {
        }
        
        public GetExceptionsForMapLineResponse(Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapLineResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetExceptionsForMapLineResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetExceptionsForMapLineResult;
        
        public GetExceptionsForMapLineResponseBody() {
        }
        
        public GetExceptionsForMapLineResponseBody(string GetExceptionsForMapLineResult) {
            this.GetExceptionsForMapLineResult = GetExceptionsForMapLineResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetExceptionsForMapRegionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetExceptionsForMapRegion", Namespace="http://tempuri.org/", Order=0)]
        public Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapRegionRequestBody Body;
        
        public GetExceptionsForMapRegionRequest() {
        }
        
        public GetExceptionsForMapRegionRequest(Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapRegionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetExceptionsForMapRegionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int VehicleID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.DateTime StartDateTime;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime EndDateTime;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int ExceptionTypeID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string RegionID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int UserID;
        
        public GetExceptionsForMapRegionRequestBody() {
        }
        
        public GetExceptionsForMapRegionRequestBody(int VehicleID, System.DateTime StartDateTime, System.DateTime EndDateTime, int ExceptionTypeID, string RegionID, int UserID) {
            this.VehicleID = VehicleID;
            this.StartDateTime = StartDateTime;
            this.EndDateTime = EndDateTime;
            this.ExceptionTypeID = ExceptionTypeID;
            this.RegionID = RegionID;
            this.UserID = UserID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetExceptionsForMapRegionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetExceptionsForMapRegionResponse", Namespace="http://tempuri.org/", Order=0)]
        public Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapRegionResponseBody Body;
        
        public GetExceptionsForMapRegionResponse() {
        }
        
        public GetExceptionsForMapRegionResponse(Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapRegionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetExceptionsForMapRegionResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetExceptionsForMapRegionResult;
        
        public GetExceptionsForMapRegionResponseBody() {
        }
        
        public GetExceptionsForMapRegionResponseBody(string GetExceptionsForMapRegionResult) {
            this.GetExceptionsForMapRegionResult = GetExceptionsForMapRegionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetVehicleDistanceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetVehicleDistance", Namespace="http://tempuri.org/", Order=0)]
        public Asiatek.TMS.HistoricalDataNS.GetVehicleDistanceRequestBody Body;
        
        public GetVehicleDistanceRequest() {
        }
        
        public GetVehicleDistanceRequest(Asiatek.TMS.HistoricalDataNS.GetVehicleDistanceRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetVehicleDistanceRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int VehicleID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.DateTime StartDateTime;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime EndDateTime;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int UserID;
        
        public GetVehicleDistanceRequestBody() {
        }
        
        public GetVehicleDistanceRequestBody(int VehicleID, System.DateTime StartDateTime, System.DateTime EndDateTime, int UserID) {
            this.VehicleID = VehicleID;
            this.StartDateTime = StartDateTime;
            this.EndDateTime = EndDateTime;
            this.UserID = UserID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetVehicleDistanceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetVehicleDistanceResponse", Namespace="http://tempuri.org/", Order=0)]
        public Asiatek.TMS.HistoricalDataNS.GetVehicleDistanceResponseBody Body;
        
        public GetVehicleDistanceResponse() {
        }
        
        public GetVehicleDistanceResponse(Asiatek.TMS.HistoricalDataNS.GetVehicleDistanceResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetVehicleDistanceResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetVehicleDistanceResult;
        
        public GetVehicleDistanceResponseBody() {
        }
        
        public GetVehicleDistanceResponseBody(string GetVehicleDistanceResult) {
            this.GetVehicleDistanceResult = GetVehicleDistanceResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface HistoricalDataSoapChannel : Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HistoricalDataSoapClient : System.ServiceModel.ClientBase<Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap>, Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap {
        
        public HistoricalDataSoapClient() {
        }
        
        public HistoricalDataSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HistoricalDataSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HistoricalDataSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HistoricalDataSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Asiatek.TMS.HistoricalDataNS.GetHistorySignalsResponse Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap.GetHistorySignals(Asiatek.TMS.HistoricalDataNS.GetHistorySignalsRequest request) {
            return base.Channel.GetHistorySignals(request);
        }
        
        public string GetHistorySignals(int VehicleID, System.DateTime StartDateTime, System.DateTime EndDateTime) {
            Asiatek.TMS.HistoricalDataNS.GetHistorySignalsRequest inValue = new Asiatek.TMS.HistoricalDataNS.GetHistorySignalsRequest();
            inValue.Body = new Asiatek.TMS.HistoricalDataNS.GetHistorySignalsRequestBody();
            inValue.Body.VehicleID = VehicleID;
            inValue.Body.StartDateTime = StartDateTime;
            inValue.Body.EndDateTime = EndDateTime;
            Asiatek.TMS.HistoricalDataNS.GetHistorySignalsResponse retVal = ((Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap)(this)).GetHistorySignals(inValue);
            return retVal.Body.GetHistorySignalsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Asiatek.TMS.HistoricalDataNS.GetHistorySignalsResponse> Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap.GetHistorySignalsAsync(Asiatek.TMS.HistoricalDataNS.GetHistorySignalsRequest request) {
            return base.Channel.GetHistorySignalsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Asiatek.TMS.HistoricalDataNS.GetHistorySignalsResponse> GetHistorySignalsAsync(int VehicleID, System.DateTime StartDateTime, System.DateTime EndDateTime) {
            Asiatek.TMS.HistoricalDataNS.GetHistorySignalsRequest inValue = new Asiatek.TMS.HistoricalDataNS.GetHistorySignalsRequest();
            inValue.Body = new Asiatek.TMS.HistoricalDataNS.GetHistorySignalsRequestBody();
            inValue.Body.VehicleID = VehicleID;
            inValue.Body.StartDateTime = StartDateTime;
            inValue.Body.EndDateTime = EndDateTime;
            return ((Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap)(this)).GetHistorySignalsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Asiatek.TMS.HistoricalDataNS.GetAllExceptionsResponse Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap.GetAllExceptions(Asiatek.TMS.HistoricalDataNS.GetAllExceptionsRequest request) {
            return base.Channel.GetAllExceptions(request);
        }
        
        public string GetAllExceptions(int VehicleID, System.DateTime StartDateTime, System.DateTime EndDateTime, int UserID) {
            Asiatek.TMS.HistoricalDataNS.GetAllExceptionsRequest inValue = new Asiatek.TMS.HistoricalDataNS.GetAllExceptionsRequest();
            inValue.Body = new Asiatek.TMS.HistoricalDataNS.GetAllExceptionsRequestBody();
            inValue.Body.VehicleID = VehicleID;
            inValue.Body.StartDateTime = StartDateTime;
            inValue.Body.EndDateTime = EndDateTime;
            inValue.Body.UserID = UserID;
            Asiatek.TMS.HistoricalDataNS.GetAllExceptionsResponse retVal = ((Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap)(this)).GetAllExceptions(inValue);
            return retVal.Body.GetAllExceptionsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Asiatek.TMS.HistoricalDataNS.GetAllExceptionsResponse> Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap.GetAllExceptionsAsync(Asiatek.TMS.HistoricalDataNS.GetAllExceptionsRequest request) {
            return base.Channel.GetAllExceptionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Asiatek.TMS.HistoricalDataNS.GetAllExceptionsResponse> GetAllExceptionsAsync(int VehicleID, System.DateTime StartDateTime, System.DateTime EndDateTime, int UserID) {
            Asiatek.TMS.HistoricalDataNS.GetAllExceptionsRequest inValue = new Asiatek.TMS.HistoricalDataNS.GetAllExceptionsRequest();
            inValue.Body = new Asiatek.TMS.HistoricalDataNS.GetAllExceptionsRequestBody();
            inValue.Body.VehicleID = VehicleID;
            inValue.Body.StartDateTime = StartDateTime;
            inValue.Body.EndDateTime = EndDateTime;
            inValue.Body.UserID = UserID;
            return ((Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap)(this)).GetAllExceptionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Asiatek.TMS.HistoricalDataNS.GetExceptionsResponse Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap.GetExceptions(Asiatek.TMS.HistoricalDataNS.GetExceptionsRequest request) {
            return base.Channel.GetExceptions(request);
        }
        
        public string GetExceptions(int VehicleID, System.DateTime StartDateTime, System.DateTime EndDateTime, int ExceptionTypeID, int UserID) {
            Asiatek.TMS.HistoricalDataNS.GetExceptionsRequest inValue = new Asiatek.TMS.HistoricalDataNS.GetExceptionsRequest();
            inValue.Body = new Asiatek.TMS.HistoricalDataNS.GetExceptionsRequestBody();
            inValue.Body.VehicleID = VehicleID;
            inValue.Body.StartDateTime = StartDateTime;
            inValue.Body.EndDateTime = EndDateTime;
            inValue.Body.ExceptionTypeID = ExceptionTypeID;
            inValue.Body.UserID = UserID;
            Asiatek.TMS.HistoricalDataNS.GetExceptionsResponse retVal = ((Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap)(this)).GetExceptions(inValue);
            return retVal.Body.GetExceptionsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Asiatek.TMS.HistoricalDataNS.GetExceptionsResponse> Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap.GetExceptionsAsync(Asiatek.TMS.HistoricalDataNS.GetExceptionsRequest request) {
            return base.Channel.GetExceptionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Asiatek.TMS.HistoricalDataNS.GetExceptionsResponse> GetExceptionsAsync(int VehicleID, System.DateTime StartDateTime, System.DateTime EndDateTime, int ExceptionTypeID, int UserID) {
            Asiatek.TMS.HistoricalDataNS.GetExceptionsRequest inValue = new Asiatek.TMS.HistoricalDataNS.GetExceptionsRequest();
            inValue.Body = new Asiatek.TMS.HistoricalDataNS.GetExceptionsRequestBody();
            inValue.Body.VehicleID = VehicleID;
            inValue.Body.StartDateTime = StartDateTime;
            inValue.Body.EndDateTime = EndDateTime;
            inValue.Body.ExceptionTypeID = ExceptionTypeID;
            inValue.Body.UserID = UserID;
            return ((Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap)(this)).GetExceptionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Asiatek.TMS.HistoricalDataNS.GetExceptionsAndDealInfoResponse Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap.GetExceptionsAndDealInfo(Asiatek.TMS.HistoricalDataNS.GetExceptionsAndDealInfoRequest request) {
            return base.Channel.GetExceptionsAndDealInfo(request);
        }
        
        public string GetExceptionsAndDealInfo(int VehicleID, System.DateTime StartDateTime, System.DateTime EndDateTime, int ExceptionTypeID, int UserID, string DealUser) {
            Asiatek.TMS.HistoricalDataNS.GetExceptionsAndDealInfoRequest inValue = new Asiatek.TMS.HistoricalDataNS.GetExceptionsAndDealInfoRequest();
            inValue.Body = new Asiatek.TMS.HistoricalDataNS.GetExceptionsAndDealInfoRequestBody();
            inValue.Body.VehicleID = VehicleID;
            inValue.Body.StartDateTime = StartDateTime;
            inValue.Body.EndDateTime = EndDateTime;
            inValue.Body.ExceptionTypeID = ExceptionTypeID;
            inValue.Body.UserID = UserID;
            inValue.Body.DealUser = DealUser;
            Asiatek.TMS.HistoricalDataNS.GetExceptionsAndDealInfoResponse retVal = ((Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap)(this)).GetExceptionsAndDealInfo(inValue);
            return retVal.Body.GetExceptionsAndDealInfoResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Asiatek.TMS.HistoricalDataNS.GetExceptionsAndDealInfoResponse> Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap.GetExceptionsAndDealInfoAsync(Asiatek.TMS.HistoricalDataNS.GetExceptionsAndDealInfoRequest request) {
            return base.Channel.GetExceptionsAndDealInfoAsync(request);
        }
        
        public System.Threading.Tasks.Task<Asiatek.TMS.HistoricalDataNS.GetExceptionsAndDealInfoResponse> GetExceptionsAndDealInfoAsync(int VehicleID, System.DateTime StartDateTime, System.DateTime EndDateTime, int ExceptionTypeID, int UserID, string DealUser) {
            Asiatek.TMS.HistoricalDataNS.GetExceptionsAndDealInfoRequest inValue = new Asiatek.TMS.HistoricalDataNS.GetExceptionsAndDealInfoRequest();
            inValue.Body = new Asiatek.TMS.HistoricalDataNS.GetExceptionsAndDealInfoRequestBody();
            inValue.Body.VehicleID = VehicleID;
            inValue.Body.StartDateTime = StartDateTime;
            inValue.Body.EndDateTime = EndDateTime;
            inValue.Body.ExceptionTypeID = ExceptionTypeID;
            inValue.Body.UserID = UserID;
            inValue.Body.DealUser = DealUser;
            return ((Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap)(this)).GetExceptionsAndDealInfoAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Asiatek.TMS.HistoricalDataNS.GetVehicleExceptionsForEquipmenResponse Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap.GetVehicleExceptionsForEquipmen(Asiatek.TMS.HistoricalDataNS.GetVehicleExceptionsForEquipmenRequest request) {
            return base.Channel.GetVehicleExceptionsForEquipmen(request);
        }
        
        public string GetVehicleExceptionsForEquipmen(int VehicleID, System.DateTime StartDateTime, System.DateTime EndDateTime, int ExceptionTypeID, int UserID) {
            Asiatek.TMS.HistoricalDataNS.GetVehicleExceptionsForEquipmenRequest inValue = new Asiatek.TMS.HistoricalDataNS.GetVehicleExceptionsForEquipmenRequest();
            inValue.Body = new Asiatek.TMS.HistoricalDataNS.GetVehicleExceptionsForEquipmenRequestBody();
            inValue.Body.VehicleID = VehicleID;
            inValue.Body.StartDateTime = StartDateTime;
            inValue.Body.EndDateTime = EndDateTime;
            inValue.Body.ExceptionTypeID = ExceptionTypeID;
            inValue.Body.UserID = UserID;
            Asiatek.TMS.HistoricalDataNS.GetVehicleExceptionsForEquipmenResponse retVal = ((Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap)(this)).GetVehicleExceptionsForEquipmen(inValue);
            return retVal.Body.GetVehicleExceptionsForEquipmenResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Asiatek.TMS.HistoricalDataNS.GetVehicleExceptionsForEquipmenResponse> Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap.GetVehicleExceptionsForEquipmenAsync(Asiatek.TMS.HistoricalDataNS.GetVehicleExceptionsForEquipmenRequest request) {
            return base.Channel.GetVehicleExceptionsForEquipmenAsync(request);
        }
        
        public System.Threading.Tasks.Task<Asiatek.TMS.HistoricalDataNS.GetVehicleExceptionsForEquipmenResponse> GetVehicleExceptionsForEquipmenAsync(int VehicleID, System.DateTime StartDateTime, System.DateTime EndDateTime, int ExceptionTypeID, int UserID) {
            Asiatek.TMS.HistoricalDataNS.GetVehicleExceptionsForEquipmenRequest inValue = new Asiatek.TMS.HistoricalDataNS.GetVehicleExceptionsForEquipmenRequest();
            inValue.Body = new Asiatek.TMS.HistoricalDataNS.GetVehicleExceptionsForEquipmenRequestBody();
            inValue.Body.VehicleID = VehicleID;
            inValue.Body.StartDateTime = StartDateTime;
            inValue.Body.EndDateTime = EndDateTime;
            inValue.Body.ExceptionTypeID = ExceptionTypeID;
            inValue.Body.UserID = UserID;
            return ((Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap)(this)).GetVehicleExceptionsForEquipmenAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Asiatek.TMS.HistoricalDataNS.GetExceptionsForMainPowerResponse Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap.GetExceptionsForMainPower(Asiatek.TMS.HistoricalDataNS.GetExceptionsForMainPowerRequest request) {
            return base.Channel.GetExceptionsForMainPower(request);
        }
        
        public string GetExceptionsForMainPower(int VehicleID, System.DateTime StartDateTime, System.DateTime EndDateTime, int ExceptionTypeID, int UserID) {
            Asiatek.TMS.HistoricalDataNS.GetExceptionsForMainPowerRequest inValue = new Asiatek.TMS.HistoricalDataNS.GetExceptionsForMainPowerRequest();
            inValue.Body = new Asiatek.TMS.HistoricalDataNS.GetExceptionsForMainPowerRequestBody();
            inValue.Body.VehicleID = VehicleID;
            inValue.Body.StartDateTime = StartDateTime;
            inValue.Body.EndDateTime = EndDateTime;
            inValue.Body.ExceptionTypeID = ExceptionTypeID;
            inValue.Body.UserID = UserID;
            Asiatek.TMS.HistoricalDataNS.GetExceptionsForMainPowerResponse retVal = ((Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap)(this)).GetExceptionsForMainPower(inValue);
            return retVal.Body.GetExceptionsForMainPowerResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Asiatek.TMS.HistoricalDataNS.GetExceptionsForMainPowerResponse> Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap.GetExceptionsForMainPowerAsync(Asiatek.TMS.HistoricalDataNS.GetExceptionsForMainPowerRequest request) {
            return base.Channel.GetExceptionsForMainPowerAsync(request);
        }
        
        public System.Threading.Tasks.Task<Asiatek.TMS.HistoricalDataNS.GetExceptionsForMainPowerResponse> GetExceptionsForMainPowerAsync(int VehicleID, System.DateTime StartDateTime, System.DateTime EndDateTime, int ExceptionTypeID, int UserID) {
            Asiatek.TMS.HistoricalDataNS.GetExceptionsForMainPowerRequest inValue = new Asiatek.TMS.HistoricalDataNS.GetExceptionsForMainPowerRequest();
            inValue.Body = new Asiatek.TMS.HistoricalDataNS.GetExceptionsForMainPowerRequestBody();
            inValue.Body.VehicleID = VehicleID;
            inValue.Body.StartDateTime = StartDateTime;
            inValue.Body.EndDateTime = EndDateTime;
            inValue.Body.ExceptionTypeID = ExceptionTypeID;
            inValue.Body.UserID = UserID;
            return ((Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap)(this)).GetExceptionsForMainPowerAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapLineResponse Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap.GetExceptionsForMapLine(Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapLineRequest request) {
            return base.Channel.GetExceptionsForMapLine(request);
        }
        
        public string GetExceptionsForMapLine(int VehicleID, System.DateTime StartDateTime, System.DateTime EndDateTime, int ExceptionTypeID, int LineID, int UserID) {
            Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapLineRequest inValue = new Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapLineRequest();
            inValue.Body = new Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapLineRequestBody();
            inValue.Body.VehicleID = VehicleID;
            inValue.Body.StartDateTime = StartDateTime;
            inValue.Body.EndDateTime = EndDateTime;
            inValue.Body.ExceptionTypeID = ExceptionTypeID;
            inValue.Body.LineID = LineID;
            inValue.Body.UserID = UserID;
            Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapLineResponse retVal = ((Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap)(this)).GetExceptionsForMapLine(inValue);
            return retVal.Body.GetExceptionsForMapLineResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapLineResponse> Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap.GetExceptionsForMapLineAsync(Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapLineRequest request) {
            return base.Channel.GetExceptionsForMapLineAsync(request);
        }
        
        public System.Threading.Tasks.Task<Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapLineResponse> GetExceptionsForMapLineAsync(int VehicleID, System.DateTime StartDateTime, System.DateTime EndDateTime, int ExceptionTypeID, int LineID, int UserID) {
            Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapLineRequest inValue = new Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapLineRequest();
            inValue.Body = new Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapLineRequestBody();
            inValue.Body.VehicleID = VehicleID;
            inValue.Body.StartDateTime = StartDateTime;
            inValue.Body.EndDateTime = EndDateTime;
            inValue.Body.ExceptionTypeID = ExceptionTypeID;
            inValue.Body.LineID = LineID;
            inValue.Body.UserID = UserID;
            return ((Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap)(this)).GetExceptionsForMapLineAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapRegionResponse Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap.GetExceptionsForMapRegion(Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapRegionRequest request) {
            return base.Channel.GetExceptionsForMapRegion(request);
        }
        
        public string GetExceptionsForMapRegion(int VehicleID, System.DateTime StartDateTime, System.DateTime EndDateTime, int ExceptionTypeID, string RegionID, int UserID) {
            Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapRegionRequest inValue = new Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapRegionRequest();
            inValue.Body = new Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapRegionRequestBody();
            inValue.Body.VehicleID = VehicleID;
            inValue.Body.StartDateTime = StartDateTime;
            inValue.Body.EndDateTime = EndDateTime;
            inValue.Body.ExceptionTypeID = ExceptionTypeID;
            inValue.Body.RegionID = RegionID;
            inValue.Body.UserID = UserID;
            Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapRegionResponse retVal = ((Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap)(this)).GetExceptionsForMapRegion(inValue);
            return retVal.Body.GetExceptionsForMapRegionResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapRegionResponse> Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap.GetExceptionsForMapRegionAsync(Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapRegionRequest request) {
            return base.Channel.GetExceptionsForMapRegionAsync(request);
        }
        
        public System.Threading.Tasks.Task<Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapRegionResponse> GetExceptionsForMapRegionAsync(int VehicleID, System.DateTime StartDateTime, System.DateTime EndDateTime, int ExceptionTypeID, string RegionID, int UserID) {
            Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapRegionRequest inValue = new Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapRegionRequest();
            inValue.Body = new Asiatek.TMS.HistoricalDataNS.GetExceptionsForMapRegionRequestBody();
            inValue.Body.VehicleID = VehicleID;
            inValue.Body.StartDateTime = StartDateTime;
            inValue.Body.EndDateTime = EndDateTime;
            inValue.Body.ExceptionTypeID = ExceptionTypeID;
            inValue.Body.RegionID = RegionID;
            inValue.Body.UserID = UserID;
            return ((Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap)(this)).GetExceptionsForMapRegionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Asiatek.TMS.HistoricalDataNS.GetVehicleDistanceResponse Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap.GetVehicleDistance(Asiatek.TMS.HistoricalDataNS.GetVehicleDistanceRequest request) {
            return base.Channel.GetVehicleDistance(request);
        }
        
        public string GetVehicleDistance(int VehicleID, System.DateTime StartDateTime, System.DateTime EndDateTime, int UserID) {
            Asiatek.TMS.HistoricalDataNS.GetVehicleDistanceRequest inValue = new Asiatek.TMS.HistoricalDataNS.GetVehicleDistanceRequest();
            inValue.Body = new Asiatek.TMS.HistoricalDataNS.GetVehicleDistanceRequestBody();
            inValue.Body.VehicleID = VehicleID;
            inValue.Body.StartDateTime = StartDateTime;
            inValue.Body.EndDateTime = EndDateTime;
            inValue.Body.UserID = UserID;
            Asiatek.TMS.HistoricalDataNS.GetVehicleDistanceResponse retVal = ((Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap)(this)).GetVehicleDistance(inValue);
            return retVal.Body.GetVehicleDistanceResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Asiatek.TMS.HistoricalDataNS.GetVehicleDistanceResponse> Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap.GetVehicleDistanceAsync(Asiatek.TMS.HistoricalDataNS.GetVehicleDistanceRequest request) {
            return base.Channel.GetVehicleDistanceAsync(request);
        }
        
        public System.Threading.Tasks.Task<Asiatek.TMS.HistoricalDataNS.GetVehicleDistanceResponse> GetVehicleDistanceAsync(int VehicleID, System.DateTime StartDateTime, System.DateTime EndDateTime, int UserID) {
            Asiatek.TMS.HistoricalDataNS.GetVehicleDistanceRequest inValue = new Asiatek.TMS.HistoricalDataNS.GetVehicleDistanceRequest();
            inValue.Body = new Asiatek.TMS.HistoricalDataNS.GetVehicleDistanceRequestBody();
            inValue.Body.VehicleID = VehicleID;
            inValue.Body.StartDateTime = StartDateTime;
            inValue.Body.EndDateTime = EndDateTime;
            inValue.Body.UserID = UserID;
            return ((Asiatek.TMS.HistoricalDataNS.HistoricalDataSoap)(this)).GetVehicleDistanceAsync(inValue);
        }
    }
}
