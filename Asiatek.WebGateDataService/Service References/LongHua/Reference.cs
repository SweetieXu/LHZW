//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Asiatek.WebGateDataService.LongHua {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LongHua.Service1Soap")]
    public interface Service1Soap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        System.Threading.Tasks.Task<string> HelloWorldAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CompanyCheck", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CompanyCheck(string CompanyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CompanyCheck", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CompanyCheckAsync(string CompanyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VisiterCheck", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string VisiterCheck(string idno, string idno1, int cardtype, string EnterDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VisiterCheck", ReplyAction="*")]
        System.Threading.Tasks.Task<string> VisiterCheckAsync(string idno, string idno1, int cardtype, string EnterDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CarCheck", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CarCheck(string CarNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CarCheck", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CarCheckAsync(string CarNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetNameByEmpNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetNameByEmpNo(string EmployeeNO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetNameByEmpNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetNameByEmpNoAsync(string EmployeeNO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddTemporaryCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int AddTemporaryCustomer(
                    int CompanyID, 
                    int BGID, 
                    string Branch, 
                    string Department, 
                    int IntoDoor, 
                    int PurposeType, 
                    string IntoReason, 
                    string LeadNo, 
                    string LeadMen, 
                    string LeadTel, 
                    string ReceiverNo, 
                    string Receiver, 
                    string ReceiverTel, 
                    int AreaRegionID, 
                    int HouseID, 
                    int FloorID, 
                    string Location, 
                    string StartTime, 
                    string EndTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddTemporaryCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<int> AddTemporaryCustomerAsync(
                    int CompanyID, 
                    int BGID, 
                    string Branch, 
                    string Department, 
                    int IntoDoor, 
                    int PurposeType, 
                    string IntoReason, 
                    string LeadNo, 
                    string LeadMen, 
                    string LeadTel, 
                    string ReceiverNo, 
                    string Receiver, 
                    string ReceiverTel, 
                    int AreaRegionID, 
                    int HouseID, 
                    int FloorID, 
                    string Location, 
                    string StartTime, 
                    string EndTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddTemporaryPeople", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int AddTemporaryPeople(string CustomerName, int PapersType, string PapersNumber, string PassportNumber, string Sex, string TemporaryCustomerID, string Tel, string Work, string CarCode, string CarType1, string CarColor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddTemporaryPeople", ReplyAction="*")]
        System.Threading.Tasks.Task<int> AddTemporaryPeopleAsync(string CustomerName, int PapersType, string PapersNumber, string PassportNumber, string Sex, string TemporaryCustomerID, string Tel, string Work, string CarCode, string CarType1, string CarColor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SignRightCheck", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SignRightCheck(string EmployeeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SignRightCheck", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SignRightCheckAsync(string EmployeeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetVehicleRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetVehicleRecord(string CarNumber, string StartTime, string EndTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetVehicleRecord", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetVehicleRecordAsync(string CarNumber, string StartTime, string EndTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InorOutRegister", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InorOutRegister(int TemporaryMenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InorOutRegister", ReplyAction="*")]
        System.Threading.Tasks.Task<string> InorOutRegisterAsync(int TemporaryMenID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface Service1SoapChannel : Asiatek.WebGateDataService.LongHua.Service1Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1SoapClient : System.ServiceModel.ClientBase<Asiatek.WebGateDataService.LongHua.Service1Soap>, Asiatek.WebGateDataService.LongHua.Service1Soap {
        
        public Service1SoapClient() {
        }
        
        public Service1SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        public System.Threading.Tasks.Task<string> HelloWorldAsync() {
            return base.Channel.HelloWorldAsync();
        }
        
        public string CompanyCheck(string CompanyName) {
            return base.Channel.CompanyCheck(CompanyName);
        }
        
        public System.Threading.Tasks.Task<string> CompanyCheckAsync(string CompanyName) {
            return base.Channel.CompanyCheckAsync(CompanyName);
        }
        
        public string VisiterCheck(string idno, string idno1, int cardtype, string EnterDate) {
            return base.Channel.VisiterCheck(idno, idno1, cardtype, EnterDate);
        }
        
        public System.Threading.Tasks.Task<string> VisiterCheckAsync(string idno, string idno1, int cardtype, string EnterDate) {
            return base.Channel.VisiterCheckAsync(idno, idno1, cardtype, EnterDate);
        }
        
        public string CarCheck(string CarNumber) {
            return base.Channel.CarCheck(CarNumber);
        }
        
        public System.Threading.Tasks.Task<string> CarCheckAsync(string CarNumber) {
            return base.Channel.CarCheckAsync(CarNumber);
        }
        
        public string GetNameByEmpNo(string EmployeeNO) {
            return base.Channel.GetNameByEmpNo(EmployeeNO);
        }
        
        public System.Threading.Tasks.Task<string> GetNameByEmpNoAsync(string EmployeeNO) {
            return base.Channel.GetNameByEmpNoAsync(EmployeeNO);
        }
        
        public int AddTemporaryCustomer(
                    int CompanyID, 
                    int BGID, 
                    string Branch, 
                    string Department, 
                    int IntoDoor, 
                    int PurposeType, 
                    string IntoReason, 
                    string LeadNo, 
                    string LeadMen, 
                    string LeadTel, 
                    string ReceiverNo, 
                    string Receiver, 
                    string ReceiverTel, 
                    int AreaRegionID, 
                    int HouseID, 
                    int FloorID, 
                    string Location, 
                    string StartTime, 
                    string EndTime) {
            return base.Channel.AddTemporaryCustomer(CompanyID, BGID, Branch, Department, IntoDoor, PurposeType, IntoReason, LeadNo, LeadMen, LeadTel, ReceiverNo, Receiver, ReceiverTel, AreaRegionID, HouseID, FloorID, Location, StartTime, EndTime);
        }
        
        public System.Threading.Tasks.Task<int> AddTemporaryCustomerAsync(
                    int CompanyID, 
                    int BGID, 
                    string Branch, 
                    string Department, 
                    int IntoDoor, 
                    int PurposeType, 
                    string IntoReason, 
                    string LeadNo, 
                    string LeadMen, 
                    string LeadTel, 
                    string ReceiverNo, 
                    string Receiver, 
                    string ReceiverTel, 
                    int AreaRegionID, 
                    int HouseID, 
                    int FloorID, 
                    string Location, 
                    string StartTime, 
                    string EndTime) {
            return base.Channel.AddTemporaryCustomerAsync(CompanyID, BGID, Branch, Department, IntoDoor, PurposeType, IntoReason, LeadNo, LeadMen, LeadTel, ReceiverNo, Receiver, ReceiverTel, AreaRegionID, HouseID, FloorID, Location, StartTime, EndTime);
        }
        
        public int AddTemporaryPeople(string CustomerName, int PapersType, string PapersNumber, string PassportNumber, string Sex, string TemporaryCustomerID, string Tel, string Work, string CarCode, string CarType1, string CarColor) {
            return base.Channel.AddTemporaryPeople(CustomerName, PapersType, PapersNumber, PassportNumber, Sex, TemporaryCustomerID, Tel, Work, CarCode, CarType1, CarColor);
        }
        
        public System.Threading.Tasks.Task<int> AddTemporaryPeopleAsync(string CustomerName, int PapersType, string PapersNumber, string PassportNumber, string Sex, string TemporaryCustomerID, string Tel, string Work, string CarCode, string CarType1, string CarColor) {
            return base.Channel.AddTemporaryPeopleAsync(CustomerName, PapersType, PapersNumber, PassportNumber, Sex, TemporaryCustomerID, Tel, Work, CarCode, CarType1, CarColor);
        }
        
        public string SignRightCheck(string EmployeeNo) {
            return base.Channel.SignRightCheck(EmployeeNo);
        }
        
        public System.Threading.Tasks.Task<string> SignRightCheckAsync(string EmployeeNo) {
            return base.Channel.SignRightCheckAsync(EmployeeNo);
        }
        
        public string GetVehicleRecord(string CarNumber, string StartTime, string EndTime) {
            return base.Channel.GetVehicleRecord(CarNumber, StartTime, EndTime);
        }
        
        public System.Threading.Tasks.Task<string> GetVehicleRecordAsync(string CarNumber, string StartTime, string EndTime) {
            return base.Channel.GetVehicleRecordAsync(CarNumber, StartTime, EndTime);
        }
        
        public string InorOutRegister(int TemporaryMenID) {
            return base.Channel.InorOutRegister(TemporaryMenID);
        }
        
        public System.Threading.Tasks.Task<string> InorOutRegisterAsync(int TemporaryMenID) {
            return base.Channel.InorOutRegisterAsync(TemporaryMenID);
        }
    }
}
