@using Asiatek.Model
@using Asiatek.TMS.Helpers
@using Asiatek.Resource
@model NewEditVehicleModel

<link href="~/Content/bootstrap/bootstrap.min.css" rel="stylesheet" />

<div class="tab-content">
    <div class="tab-pane fade in active" id="vehicleBasicInfo">
        @using (Ajax.BeginForm("NewEditVehicle_SZYD", "Vehicle", new AjaxOptions()
        {
            OnSuccess = "showCommonEditResult",
        }, new { id = "frmEditVehicle_SZYD" }))
        {
            <div id="divContent" style="overflow-y: auto;">
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.ID)
                @Html.HiddenFor(m => m.OldTerminalID)
                @Html.HiddenFor(m => m.TerminalCode)
                @Html.HiddenFor(m => m.BusinessScopeList)
                @Html.HiddenFor(m => m.TransportManagementList)
                @Html.HiddenFor(m => m.PlateNum)
                @Html.HiddenFor(m => m.VIN)
                @Html.HiddenFor(m => m.PrimaryTerminalID)
                @* 模型中验证不能为空 *@
                @Html.HiddenFor(m => m.Ownership)
                @Html.HiddenFor(m => m.SoftwareDate)
                @Html.HiddenFor(m => m.WarrantyDate)
                @Html.HiddenFor(m => m.PlateColorCode)
                @Html.HiddenFor(m => m.VehicleTypeCode)
                <fieldset>
                    <legend></legend>
                    <table class="table table-striped table-condensed table-hover">
                        <tbody>
                            <tr>
                                <td>@Html.LabelForRequired(m => m.VehicleName)：</td>
                                <td>@Html.TextBoxFor(m => m.VehicleName)</td>
                                <td>@Html.LabelForRequired(m => m.EditStrucID)：</td>
                                <td>
                                    @Html.TextBoxFor(m => m.UserStrucName)
                                    @Html.HiddenFor(m => m.StrucID)
                                    @Html.HiddenFor(m => m.EditStrucID)
                                </td>
                                <td>@Html.LabelFor(m => m.OwnersName)：</td>
                                <td>
                                    @Html.TextBoxFor(m => m.OwnersName)
                                    @Html.HiddenFor(m => m.OwnersID)
                                </td>
                            </tr>
                            <tr>
                                <td></td>
                                <td>@Html.ValidationMessageFor(m => m.VehicleName)</td>
                                <td></td>
                                <td>@Html.ValidationMessageFor(m => m.EditStrucID)</td>
                                <td></td>
                                <td></td>
                            </tr>
                            <tr>
                                <td>@Html.LabelFor(m => m.IsDangerous)：</td>
                                <td>@Html.CheckBoxFor(m => m.IsDangerous)</td>
                                <td>@Html.LabelFor(m => m.Driver)：</td>
                                <td>
                                    @Html.TextBoxFor(m => m.Driver)
                                    @Html.HiddenFor(m => m.DriverID)
                                </td>
                                <td>@Html.LabelFor(m => m.Carrier)：</td>
                                <td>
                                    @Html.TextBoxFor(m => m.Carrier, new { @disabled = true })
                                    @Html.HiddenFor(m => m.CarrierID)
                                </td>
                            </tr>
                            <tr>
                                <td colspan="6"></td>
                            </tr>
                            <tr class="hid">
                                <td>@Html.LabelFor(m => m.IsTransmit)：</td>
                                <td>@Html.CheckBoxFor(m => m.IsTransmit)</td>
                                <td>@Html.LabelFor(m => m.CarToLand)：</td>
                                <td>@Html.TextBoxFor(m => m.CarToLand)</td>
                                <td>@Html.LabelFor(m => m.RoadransportNo)：</td>
                                <td>@Html.TextBoxFor(m => m.RoadransportNo)</td>
                            </tr>
                            <tr class="hid">
                                <td colspan="3"></td>
                                <td colspan="3">@Html.ValidationMessageFor(m => m.CarToLand)</td>
                            </tr>
                            <tr class="hid">
                                <td>@Html.LabelFor(m => m.TransportIndustryCode)：</td>
                                <td colspan="5" id="distributionTransportIndustryCode">
                                    @if (Model.IsDangerous && ViewBag.TransportIndustryList != null)
                                    {
                                        var listTransportIndustry = ViewBag.TransportIndustryList as List<TransportIndustryModel>;
                                        var strHtml = "<table>";
                                        var listTransportIndustryCount = listTransportIndustry.Count;
                                        for (int i = 0; i < listTransportIndustryCount; i++)
                                        {
                                            if (i % 4 == 0)
                                            {
                                                strHtml += "<tr>";
                                            }

                                            var isChecked = Model.TransportIndustryCode == listTransportIndustry[i].Code ? "checked" : string.Empty;
                                            strHtml += "<td><input value='" + listTransportIndustry[i].Code + "'" +
                                                 "id='chkTransportIndustryCode " + listTransportIndustry[i].Code + "'" +
                                                " name='TransportIndustryCode' type='radio' " + isChecked + ">&nbsp;" +
                                               "<label style='margin-right: 15px' for='chkTransportIndustryCode " + listTransportIndustry[i].Code + "'>"
                                               + listTransportIndustry[i].Name + "</label></td>";
                                            if (i % 4 == 3 || i == listTransportIndustryCount - 1)
                                            {
                                                strHtml += "</tr>";
                                            }
                                        }
                                        strHtml += "</table>";
                                        @Html.Raw(strHtml);
                                    }
                                </td>
                            </tr>
                            <tr class="hid">
                                <td colspan="6"></td>
                            </tr>
                            <tr class="hid" id="trTransportManagementList">
                                <td>@Html.Label(@UIText.TransportManagement)：</td>
                                <td colspan="5" id="distributionTransportManagement">
                                    @if (Model.IsDangerous && Model.IsTransmit && ViewBag.TransportManagementList != null)
                                    {
                                        var listTransportManagement = ViewBag.TransportManagementList as List<TransportManagementDDLModel>;
                                        var strHtml = "<table>";
                                        var listTransportManagementCount = listTransportManagement.Count;
                                        for (int i = 0; i < listTransportManagementCount; i++)
                                        {
                                            if (i % 3 == 0)
                                            {
                                                strHtml += "<tr>";
                                            }

                                            var isChecked = listTransportManagement[i].IsHas ? "checked" : string.Empty;
                                            strHtml += "<td><input value='" + listTransportManagement[i].ID + "'" +
                                                 "id='chkTransportManagement " + listTransportManagement[i].ID + "'" +
                                                " name='chkTransportManagement' type='checkbox' " + isChecked + ">&nbsp;" +
                                               "<label style='margin-right: 15px' for='chkTransportManagement " + listTransportManagement[i].ID + "'>"
                                               + listTransportManagement[i].Name + "</label></td>";
                                            if (i % 3 == 2 || i == listTransportManagementCount - 1)
                                            {
                                                strHtml += "</tr>";
                                            }
                                        }
                                        strHtml += "</table>";
                                        @Html.Raw(strHtml);
                                    }
                                </td>
                            </tr>
                            <tr class="hid" id="trSpaceTransportManagement">
                                <td colspan="6"></td>
                            </tr>
                            <tr class="hid">
                                <td>@Html.Label(@DisplayText.BusinessScopeName)：</td>
                                <td colspan="5" id="distributionBusinessScope" style="max-width: 841px; word-wrap: break-word; word-break: break-all;">
                                    @if (Model.IsDangerous && ViewBag.StrucVehicleBussinessScope != null)
                                    {
                                        var listStrucVehicleBussinessScope = ViewBag.StrucVehicleBussinessScope as List<StrucVehicleBussinessScopeDDLModel>;
                                        var strHtml = "<table>";
                                        var listStrucVehicleBussinessScopeCount = listStrucVehicleBussinessScope.Count;
                                        for (int i = 0; i < listStrucVehicleBussinessScopeCount; i++)
                                        {
                                            if (i % 3 == 0)
                                            {
                                                strHtml += "<tr>";
                                            }

                                            var isChecked = listStrucVehicleBussinessScope[i].IsHas ? "checked" : string.Empty;
                                            strHtml += "<td><input value='" + listStrucVehicleBussinessScope[i].BusinessScopeCode + "'" +
                                                 "id='chkBusinessScope " + listStrucVehicleBussinessScope[i].BusinessScopeCode + "'" +
                                                " name='chkBusinessScope' type='checkbox' " + isChecked + ">&nbsp;" +
                                               "<label style='margin-right: 15px' for='chkBusinessScope " + listStrucVehicleBussinessScope[i].BusinessScopeCode + "'>"
                                               + listStrucVehicleBussinessScope[i].Name + "</label></td>";
                                            if (i % 3 == 2 || i == listStrucVehicleBussinessScopeCount - 1)
                                            {
                                                strHtml += "</tr>";
                                            }
                                        }
                                        strHtml += "</table>";
                                        @Html.Raw(strHtml);
                                    }
                                </td>

                            </tr>
                            <tr class="hid">
                                <td colspan="6"></td>
                            </tr>
                            <tr>
                                <td>@Html.LabelFor(m => m.Remark)：</td>
                                <td colspan="5">
                                    @Html.TextAreaFor(m => m.Remark, new { @class = "fixTextArea" })
                                </td>
                            </tr>
                            <tr>
                                <td colspan="6"></td>
                            </tr>
                        </tbody>

                    </table>
                </fieldset>
            </div>
            <table>
                <tr>
                    <td>
                        <button class="btn btn-primary" title="@UIText.SaveButton"><span class="glyphicon glyphicon-ok"></span></button>
                    </td>
                </tr>
            </table>
        }
    </div>
    <div class="tab-pane fade" id="vehicleSensorInfo" style="height: 550px; width: 900px;"></div>
</div>

<script>
    var $frmEditVehicle = $("#frmEditVehicle_SZYD");
    $frmEditVehicle.find("input:not(:submit,:checkbox,:radio),textarea,select").addClass("form-control");

    //设置让经营范围自动换行
    //$("#distributionBusinessScope").attr("style", "max-width:" + $("#divAsiatekEditWin").width() + "px;word-wrap:break-word;word-break:break-all;")
    // 设置内层div的最大高度 超出高度后自动出现滚动条
    $("#divContent").css("max-height", ($(window).height() * 0.65) + "px");

    //提交时前台各种验证
    $frmEditVehicle.fixUnobtrusiveValidation(function (form) {
        if (checkForm()) {
            $(form).ajaxSubmit({
                success: function (responseText, statusText, xhr, $form) {
                    showCommonEditResult(responseText);
                }
            });
        }
        return false;
    });

    // 表单验证
    var checkForm = function () {
        // 只要是危险品车 就必须选择押运员 驾驶员 和 经营范围
        if ($("#IsDangerous").prop("checked")) {
            if (!$("#DriverID").val()) {
                $.showPromptDialog('@UIText.DriverError', '@UIText.InformationTitle', '@UIText.Close');
                return false;
            }
            else if (!$("#CarrierID").val()) {
                $.showPromptDialog('@UIText.CarrierError', '@UIText.InformationTitle', '@UIText.Close');
                return false;
            }
            else if (!$("#CarToLand").val()) {
                $.showPromptDialog('@UIText.CarToLandError', '@UIText.InformationTitle', '@UIText.Close');
                return false;
            }
            else if (!$("#RoadransportNo").val()) {
                $.showPromptDialog('@UIText.RoadransportNoError', '@UIText.InformationTitle', '@UIText.Close');
                return false;
            }
            else if ($("input[name='TransportIndustryCode']:checked").length == 0) {
                $.showPromptDialog('@UIText.TransportIndustryError', '@UIText.InformationTitle', '@UIText.Close');
                return false;
            }
            else if ($("input[name='chkTransportManagement']:checked").length == 0 && $("#IsTransmit").prop("checked")) {
                $.showPromptDialog('@UIText.TransportManagementError', '@UIText.InformationTitle', '@UIText.Close');
                return false;
            }
            else if ($("input[name='chkBusinessScope']:checked").length == 0) {
                $.showPromptDialog('@UIText.BusinessScopeError', '@UIText.InformationTitle', '@UIText.Close');
                    return false;
                }
}
        // 获取选中的经营范围
        var businessScopeList = "";
        // 获取选中的运管所
        var transportManagementList = "";
        $("input[name='chkBusinessScope']:checked").each(function (inde, obj) {
            businessScopeList += $(obj).val() + ",";
        });
        $("input[name='chkTransportManagement']:checked").each(function (inde, obj) {
            transportManagementList += $(obj).val() + ",";
        });

        $("#BusinessScopeList").val(businessScopeList);
        $("#TransportManagementList").val(transportManagementList);
        return true;
    }

// 初始化界面 针对是否是危险品车作出相关的页面处理
if ($("#IsDangerous").prop("checked")) {
    $("#Carrier").removeAttr('disabled');
    if (!$("#IsTransmit").prop("checked")) {
        $("#trTransportManagementList").hide();
        $("#trSpaceTransportManagement").hide();
    }
}
else {
    $("tr[class='hid']").hide();
}


// 使用单位文本chang事件
$("#UserStrucName").bind("input propertychange", function () {
    $("#EditStrucID").val('');
    $("#StrucID").val(-1);
    $("span[data-valmsg-for='EditStrucID']").show();
    commonHide();
});


//必须指定appendto，否则对于jquery ui dialog中使用的该控件的弹出选择部分会因为层级原因被dialog遮挡，
//而且因为dialog的层级会动态调整即使设定了autocomplete的z - index也可能会失效，所以必须设置ui - dialog的z - index，
//但是全局修改可能造成其他问题
$("#UserStrucName").autocomplete({
    delay: 500,
    minLength: 1,
    appendTo: $frmEditVehicle,
    select: function (event, ui) {
        $("#EditStrucID").val(ui.item.ID);
        $("#StrucID").val(ui.item.ID);
        $("span[data-valmsg-for='EditStrucID']").hide();

        //选择了使用单位 则驾驶员信息就可输入
        $("#Driver").attr('disabled', false);

        // 如果选择了使用单位 且是危险品车 则获取使用单位对应的经营范围 运输行业
        if ($("#IsDangerous").prop("checked")) {
            $("#Carrier").attr('disabled', false);
            $("tr[class='hid']").show();
            // 获取经营范围
            getBusinessScope();
            // 获取运输行业
            getTransportIndustry();
            // 默认选中转发运管
            $("#IsTransmit").prop("checked", true);
            getTransportManagement();
        }
    },
    source: function (request, response) {
        $.get('@Url.Content("~/Admin/Vehicle/GetStrucAndSubStrucByName")', { name: request.term }, function (data, status, xhr) {
            if ($.handleAjaxError(data)) {
                return;
            }
            response(data);
        });
    }
});

        // 危险品车click事件
        $("#IsDangerous").click(function () {
            if ($("#IsDangerous").prop("checked") && $("#EditStrucID").val()) {
                $("#Carrier").attr('disabled', false);
                // 如果选择了使用单位 且是危险品车 则获取使用单位对应的经营范围
                getBusinessScope();
                getTransportIndustry();
                getTransportManagement();
                $("tr[class='hid']").show();
                // 点击危险品车 默认选中 转发运管
                $("#IsTransmit").prop("checked", true);
            }
            else {
                if ($("#IsDangerous").prop("checked")) {
                    $("#IsTransmit").prop("checked", true);
                    getTransportManagement();
                }
                commonHide();
            }
        });

        // 转发运管click事件
        $("#IsTransmit").click(function () {
            if ($("#IsTransmit").prop("checked")) {
                // 如果选择转发运管 则显示运管列表信息
                $("#trTransportManagementList").show();
                $("#trSpaceTransportManagement").show();
                getTransportManagement();
            }
            else {
                $("#trTransportManagementList").hide();
                $("#trSpaceTransportManagement").hide();
                $("#distributionTransportManagement").html('');
            }

        });

        // 获取运管所列表
        var getTransportManagement = function () {
            $.ajax({
                url: "@Url.Content("~/Admin/Vehicle/GetTransportManagement")",
                type: 'POST',
                dataType: 'json',
                cache: false,
                success: function (result) {
                    var htmlStr = "<table>";
                    for (var i = 0; i < result.length; i++) {
                        if (i % 3 == 0) {
                            htmlStr += '<tr>';
                        }
                        htmlStr += '<td><input value="' + result[i].ID + ' "id="chkBusinessScope' + result[i].ID
                                           + '" name="chkTransportManagement" type="checkbox">&nbsp;' +
                                           '<label style="margin-right: 15px" for="chkBusinessScope' + result[i].ID + '">' + result[i].Name + '</label></td>'
                        if (i % 3 == 2 || i == result.length - 1) {
                            htmlStr += '</tr>';
                        }
                    }
                    htmlStr += '</table>';
                    $("#distributionTransportManagement").html(htmlStr);
                },
                fail: function (err, status) {
                    console.log(err)
                }
            });
        }

        // 获取使用单位对应的经营范围
        var getBusinessScope = function () {
            $.ajax({
                url: "@Url.Content("~/Admin/Vehicle/GetBusinessScopeByStrucID")",
                data: {
                    strucID: $("#EditStrucID").val()
                },
                type: 'POST',
                dataType: 'json',
                cache: false,
                success: function (result) {
                    var htmlStr = "<table>";
                    for (var i = 0; i < result.length; i++) {
                        if (i % 3 == 0) {
                            htmlStr += '<tr>';
                        }
                        htmlStr += '<td><input value="' + result[i].BusinessScopeCode + ' "id="chkBusinessScope' + result[i].BusinessScopeCode
                                           + '" name="chkBusinessScope" type="checkbox">&nbsp;' +
                                           '<label style="margin-right: 15px" for="chkBusinessScope' + result[i].BusinessScopeCode + '">' + result[i].Name + '</label></td>'
                        if (i % 3 == 2 || i == result.length - 1) {
                            htmlStr += '</tr>';
                        }
                    }
                    htmlStr += '</table>';
                    $("#distributionBusinessScope").html(htmlStr);
                },
                fail: function (err, status) {
                    console.log(err)
                }
            });
        }

        // 获取使用单位对应的运输行业
        var getTransportIndustry = function () {
            $.ajax({
                url: "@Url.Content("~/Admin/Vehicle/GetTransportIndustryByStrucID")",
                data: {
                    strucID: $("#EditStrucID").val()
                },
                type: 'POST',
                dataType: 'json',
                cache: false,
                success: function (result) {
                    var htmlStr = "<table>";
                    for (var i = 0; i < result.length; i++) {
                        if (i % 4 == 0) {
                            htmlStr += '<tr>';
                        }
                        htmlStr += '<td><input value="' + result[i].TransportIndustryCode + ' "id="chkTransportIndustryCode' + result[i].TransportIndustryCode
                                           + '" name="TransportIndustryCode" type="radio">&nbsp;' +
                                           '<label style="margin-right: 15px" for="chkTransportIndustryCode' + result[i].TransportIndustryCode + '">' + result[i].Name + '</label></td>'
                        if (i % 4 == 3 || i == result.length - 1) {
                            htmlStr += '</tr>';
                        }
                    }
                    htmlStr += '</table>';
                    $("#distributionTransportIndustryCode").html(htmlStr);
                },
                fail: function (err, status) {
                    console.log(err)
                }
            });
        }

        var commonHide = function () {
            // 取消勾选危险品车后 则隐藏经营范围信息
            $("tr[class='hid']").hide();
            $("#distributionBusinessScope").html('');
            $("#distributionTransportIndustryCode").html('');
            $("#distributionTransportManagement").html('');

            // 清空驾驶员车押运员信息
            // 清空驾驶员车押运员信息
            if (!$("#EditStrucID").val()) {
                $("#Driver").val('');
                $("#Driver").attr('disabled', true);
                $("#DriverID").val('');
                //修改使用单位 清空车主信息
                $("#OwnersName").val('');
                $("#OwnersID").val('');
            }
            $("#Carrier").val('');
            $("#Carrier").attr('disabled', true);
            $("#CarrierID").val('');
            $("#IsTransmit").prop("checked", false);

        }



        // 驾驶员文本chang事件
        $("#Driver").bind("input propertychange", function () {
            $("#DriverID").val('');
        });

        // 押运员文本chang事件
        $("#Carrier").bind("input propertychange", function () {
            $("#CarrierID").val('');
        })

        // 车主chang事件
        $("#OwnersName").bind("input propertychange", function () {
            $("#OwnersID").val('');
        })

        $("#Driver").autocomplete({
            delay: 500,
            minLength: 1,
            appendTo: $frmEditVehicle,
            select: function (event, ui) {
                $("#DriverID").val(ui.item.ID);
            },
            source: function (request, response) {
                $.get('@Url.Content("~/Admin/Vehicle/GetEmployeeInfoByStrucIDAndName")', { name: request.term, type: 1, strucID: $("#EditStrucID").val() }, function (data, status, xhr) {
                    if ($.handleAjaxError(data)) {
                        return;
                    }
                    response(data);
                });
            }
        });

            $("#Carrier").autocomplete({
                delay: 500,
                minLength: 1,
                appendTo: $frmEditVehicle,
                select: function (event, ui) {
                    $("#CarrierID").val(ui.item.ID);
                },
                source: function (request, response) {
                    $.get('@Url.Content("~/Admin/Vehicle/GetEmployeeInfoByStrucIDAndName")', { name: request.term, type: 2, strucID: $("#EditStrucID").val() }, function (data, status, xhr) {
                        if ($.handleAjaxError(data)) {
                            return;
                        }
                        response(data);
                    });
                }
            });

    $("#OwnersName").autocomplete({
        delay: 500,
        minLength: 1,
        appendTo: $frmEditVehicle,
        select: function (event, ui) {
            $("#OwnersID").val(ui.item.ID);
        },
        source: function (request, response) {
            $.get('@Url.Content("~/Admin/Vehicle/GetEmployeeInfoByStrucIDAndName")', { name: request.term, type: 3, strucID: $("#EditStrucID").val() }, function (data, status, xhr) {
                    if ($.handleAjaxError(data)) {
                        return;
                    }
                    response(data);
                });
            }
    });
</script>
