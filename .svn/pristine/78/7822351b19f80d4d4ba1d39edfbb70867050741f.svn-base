@using Asiatek.Model
@using Asiatek.Resource
@using Asiatek.AjaxPager
@model SearchDataWithPagedDatas<EmployeeInfoFindModel, EmployeeInfoPageModel>


@using (Ajax.BeginForm("GetEmployeeInfo", "EmployeeInfo", new AjaxOptions()
    {
        UpdateTargetId = "Admin_Emp_EmpSetting_divEmps",
        OnSuccess = "commonAjaxSuccess",
        HttpMethod = "GET"
    }, new { id = "frmSearchEmployeeInfo" }))
{
    <table class="table table-striped table-condensed table-hover">
        <tr>
            <td>@Html.LabelFor(m => m.SearchModel.EmployeeName)：</td>
            <td>
                <input type="search" name="EmployeeName" value=""  placeholder="@(UIText.PleaseInput + DisplayText.EmployeeName)"/>
            </td>
               <td>@Html.LabelFor(m => m.SearchModel.CertificateCode)：</td>
            <td>
                <input type="search" name="CertificateCode" value=""  placeholder="@(UIText.PleaseInput + DisplayText.CertificateCode)"/>
            </td>
               <td>@Html.LabelFor(m => m.SearchModel.ContactPhone)：</td>
            <td>
                <input type="search" name="ContactPhone" value=""  placeholder="@(UIText.PleaseInput + DisplayText.ContactPhone)"/>
            </td>

        </tr>
        <tr>
            <td>@Html.LabelFor(m => m.SearchModel.SearchStrucName)：</td>
            <td>@Html.TextBoxFor(m => m.SearchModel.SearchStrucName)
                    @Html.Hidden("SearchStrucID")
            </td>
            <td>@Html.LabelFor(m => m.SearchModel.IsDrivers)：</td>
            <td>
                  @Html.DropDownList("IsDrivers", new List<SelectListItem> 
                                 { new SelectListItem { Text = @DisplayText.PleaseSelect, Value = "-1"},
                                   new SelectListItem { Text = @DisplayText.Yes, Value = "1"},
                                   new SelectListItem { Text = @DisplayText.No, Value = "0"}
                                 })
            </td>
            <td>@Html.LabelFor(m => m.SearchModel.IsCarriers)：</td>
            <td>
                  @Html.DropDownList("IsCarriers", new List<SelectListItem> 
                                 { new SelectListItem { Text = @DisplayText.PleaseSelect, Value = "-1"},
                                   new SelectListItem { Text = @DisplayText.Yes, Value = "1"},
                                   new SelectListItem { Text = @DisplayText.No, Value = "0"}
                                 })
            </td>
        </tr>
        <tr>
            <td colspan="6">
                @Html.HiddenFor(m => m.SearchPage, new { id = "hidSearchPage" })

                <button class="btn btn-primary" title="@UIText.Search"><span class="glyphicon glyphicon-search"></span></button>
             @*   <span class="btn btn-info" title="@UIText.AddButton" id="btnAddEmployeeInfo">
                    <span class="glyphicon glyphicon-plus"></span>
                </span>*@
                 <span class="btn btn-info" title="@UIText.AddButton" id="btnAddEmployeeInfoNew">
                    <span class="glyphicon glyphicon-plus"></span>
                </span>
                <span class="btn btn-danger" title="@UIText.DeleteButton" id="btnDelEmployeeInfo">
                    <span class="glyphicon glyphicon-remove"></span>
                </span>
            </td>
        </tr>
    </table>
}



<div id="Admin_Emp_EmpSetting_divEmps">
    @Html.Partial("_EmployeeInfoPagedGrid", Model)
</div>



<script>
    $("#frmSearchEmployeeInfo").find("input:not(:submit,:checkbox,:button),textarea,select").addClass("form-control");


    $("#SearchModel_SearchStrucName").bind("input propertychange", function () {
        $("#SearchStrucID").val('');
    })

    // 注释代码 现在改为根据用户所属单位与名称模糊匹配用户所属单位以及子单位信息
    @*$("#SearchModel_SearchStrucName").autocomplete({
        delay: 500,
        minLength: 1,
        select: function (event, ui) {
            $("#SearchStrucID").val(ui.item.ID);
        },
        source: function (request, response) {
            $.get('@Url.Content("~/Admin/Vehicle/GetStructuresByName")', { name: request.term }, function (data, status, xhr) {
                if ($.handleAjaxError(data)) {
                    return;
                }
                response(data);
            });
        }
    });*@

    // 根据用户所属单位与名称模糊匹配用户所属单位以及子单位信息
    $("#SearchModel_SearchStrucName").autocomplete({
        delay: 500,
        minLength: 1,
        select: function (event, ui) {
            $("#SearchStrucID").val(ui.item.ID);
        },
        source: function (request, response) {
            $.get('@Url.Content("~/Common/GetStructuresByName")', { name: request.term }, function (data, status, xhr) {
                if ($.handleAjaxError(data)) {
                    return;
                }
                response(data);
            });
        }
    });

    $("#btnAddEmployeeInfo").on("click", function () {
        var _url = "@Url.Content("~/Admin/EmployeeInfo/AddEmployeeInfo")";
        var _data = {};
        var _title = "@UIText.AddButton";
        $.showEditDialog(_url, _data, _title, refreshSearchForm);
    });


    //员工信息新增
    $("#btnAddEmployeeInfoNew").on("click", function () {
        var _url = "@Url.Content("~/Admin/EmployeeInfo/AddEmployeeInfoNew")";
         var _data = {};
         var _title = "@UIText.AddButton";
        $.showEditDialog(_url, _data, _title, refreshSearchForm);
     });

    

    $("#btnDelEmployeeInfo").on("click", function () {
        var _message = '@UIText.PleaseSelectItem';
        if ($("input[name='empid']:checked").length == 0) {
            $.showPromptDialog(_message, '@UIText.InformationTitle', '@UIText.Close');
            return;
        }
        _message = '@UIText.ConfirmDelete';
        $.showConfirmDialog(_message, '@UIText.InformationTitle', '@UIText.Confirm', '@UIText.Cancel', function () {
            $("#frmDelEmployee").submit();
        });
    });
</script>