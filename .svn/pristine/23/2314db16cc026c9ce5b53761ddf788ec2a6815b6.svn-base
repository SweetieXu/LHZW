@using Asiatek.Model
@using Asiatek.TMS.Helpers
@using Asiatek.Resource
@model Asiatek.Model.FunctionEditModel


@using (Ajax.BeginForm("EditFunctionInfo", "Function", new AjaxOptions()
{
    OnSuccess = "showCommonEditResult",
}, new { id = "frmEditFunctionInfo" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.ID)
    
    <div class="editor-label">
        @Html.LabelFor(model => model.AreasSelectList)
    </div>
    <div class="editor-field">
        @Html.DropDownListFor(m => m.AreaID, Model.AreasSelectList, new { id = "ddlEditAreas" })
    </div>
    
    <div class="editor-label">
        @Html.LabelFor(model => model.ControllersSelectList)
    </div>
    <div class="editor-field">
        @Html.DropDownListFor(m => m.ControllerID, Model.ControllersSelectList, new { id = "ddlEditControllers" })
    </div>
    
    
    <div class="editor-label">
        @Html.LabelFor(model => model.ActionsSelectList)
    </div>
    <div class="editor-field">
        @Html.DropDownListFor(m => m.ActionID, Model.ActionsSelectList, new { id = "ddlEditActions" })
        @Html.ValidationMessageFor(model => model.ActionID)
    </div>
    
    
    <div class="editor-label">
        @Html.LabelFor(model => model.ParentFunctionsSelectList)
    </div>
    <div class="editor-field">
        @Html.DropDownListFor(m => m.ParentID, Model.ParentFunctionsSelectList, new { id = "ddlEditParentFunction" })
        @Html.CheckBoxFor(m => m.IsTopFunction)
        @Html.LabelFor(model => model.IsTopFunction)
    </div>
    
    <div class="editor-label">
        @Html.LabelFor(model => model.FunctionName)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.FunctionName)
        @Html.ValidationMessageFor(model => model.FunctionName)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.IsBackground)
    </div>
    <div class="editor-field">
        @Html.CheckBoxFor(m => m.IsBackground)
    </div>
    
    <div class="editor-label">
        @Html.LabelFor(model => model.Description)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Description)
        @Html.ValidationMessageFor(model => model.Description)
    </div>
    <p>
        <input type="submit" value="@UIText.SaveButton" />
    </p>
}


<script>
    $("#frmEditFunctionInfo").fixUnobtrusiveValidation();

    var setEditPageDropdown = function ()
    {
        var $ddlEditAreas = $("#ddlEditAreas");
        var $ddlEditControllers = $("#ddlEditControllers");
        var $ddlEditParentFunction = $("#ddlEditParentFunction");
        var $ddlEditActions = $("#ddlEditActions");
        $ddlEditAreas.change(function ()
        {
            var areaID = $.trim($ddlEditAreas.find("option:selected").val());
            $.get("@Url.Content("~/Admin/Ctr/GetControllerDDLByAreaID")", { areaID: areaID }, function (result)
            {
                $ddlEditControllers.empty();
                $.each(result, function (i, item)
                {
                    $ddlEditControllers.append($("<option></option>").text(item.ControllerName).val(item.ID));
                });
                changeActions($ddlEditControllers, $ddlEditActions);
                //changeFunctions($ddlEditControllers, $ddlEditParentFunction);
            });
        });


        $ddlEditControllers.change(function ()
        {
            changeActions($(this), $ddlEditActions);
            //changeFunctions($(this), $ddlEditParentFunction);
        });
    }


    var changeFunctions = function (ddl, ddlFunction)
    {
        var controllerID = $.trim(ddl.find("option:selected").val());
        $.get("@Url.Content("~/Admin/Function/GetFunctionDDLByControllerID")", { controllerID: controllerID }, function (result)
        {
            ddlFunction.empty();
            $.each(result, function (i, item)
            {
                ddlFunction.append($("<option></option>").text(item.FunctionName).val(item.ID));
            });
        });
    }


    var changeActions = function (ddl, ddlActions)
    {
        var controllerID = $.trim(ddl.find("option:selected").val());
        $.get("@Url.Content("~/Admin/Action/GetActionDDLByControllerID")", { controllerID: controllerID }, function (result)
        {
            ddlActions.empty();
            $.each(result, function (i, item)
            {
                ddlActions.append($("<option></option>").text(item.ActionName).val(item.ID));
            });
        });
    }

    $(function ()
    {
        setEditPageDropdown();
        var $chkIsTopFunction = $("#IsTopFunction");
        var $ddlEditParentFunction = $("#ddlEditParentFunction");

        $ddlEditParentFunction.prop("disabled", $chkIsTopFunction.prop("checked"));
        $chkIsTopFunction.on("click", function ()
        {
            $ddlEditParentFunction.prop("disabled", $(this).prop("checked"));
        });
    });

</script>
