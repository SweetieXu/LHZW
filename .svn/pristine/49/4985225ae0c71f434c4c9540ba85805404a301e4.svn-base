@using Asiatek.Model
@using Asiatek.TMS.Helpers
@using Asiatek.Resource
@model Asiatek.Model.FunctionEditModel


@using (Ajax.BeginForm("EditFunctionInfo", "Function", new AjaxOptions()
{
    OnSuccess = "showCommonEditResult",
}, new { id = "frmEditFunctionInfo" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.ID)
    
    <table class="table table-striped table-condensed table-hover">
        <tr>
            <td>@Html.LabelForRequired(model => model.AreaID)：</td>
            <td>@Html.DropDownListFor(m => m.AreaID, Model.AreasSelectList, new { id = "ddlEditAreas" })</td>
        </tr>
        <tr>
            <td colspan="2"></td>
        </tr>
        <tr>
            <td>@Html.LabelForRequired(model => model.ControllerID)：</td>
            <td>@Html.DropDownListFor(m => m.ControllerID, Model.ControllersSelectList, new { id = "ddlEditControllers" })</td>
        </tr>
        <tr>
            <td colspan="2"></td>
        </tr>
        <tr>
            <td>@Html.LabelForRequired(model => model.ActionID)：</td>
            <td>@Html.DropDownListFor(m => m.ActionID, Model.ActionsSelectList, new { id = "ddlEditActions" })</td>
        </tr>
        <tr>
            <td colspan="2">@Html.ValidationMessageFor(model => model.ActionID)</td>
        </tr>
        <tr>
            <td>@Html.LabelForRequired(model => model.FunctionIsMenu)：</td>
            <td>@Html.CheckBoxFor(m => m.FunctionIsMenu)</td>
        </tr>
        <tr>
            <td colspan="2"></td>
        </tr>
        <tr>
            <td>@Html.LabelForRequired(model => model.FunctionName)</td>
            <td>@Html.EditorFor(model => model.FunctionName)
            </td>
        </tr>
        <tr>
            <td colspan="2">@Html.ValidationMessageFor(model => model.FunctionName)</td>
        </tr>
        <tr>
            <td>@Html.LabelForRequired(model => model.ParentID)：</td>
            <td>
                @*                @Html.DropDownListFor(m => m.ParentID, Model.ParentFunctionsSelectList, new { id = "ddlEditParentFunction" })*@
                @Html.DropDownList("ddlEditParentFunction", Model.ParentFunctionsSelectList, new { id = "ddlEditParentFunction" })
                <input type="hidden" name="ParentID"  id="hidParentID" value="@Model.ParentID" />
                @Html.CheckBoxFor(m => m.IsTopFunction)
                @Html.LabelFor(model => model.IsTopFunction)
            </td>
        </tr>
        <tr>
            <td colspan="2"></td>
        </tr>

        <tr>
            <td>@Html.LabelForRequired(model => model.IsBackground)</td>
            <td>@Html.CheckBoxFor(model => model.IsBackground)</td>
        </tr>
        <tr>
            <td colspan="2"></td>
        </tr>
        <tr>
            <td>@Html.LabelForRequired(model => model.OrderIndex)</td>
            <td>@Html.EditorFor(model => model.OrderIndex)</td>
        </tr>
        <tr>
            <td colspan="2">@Html.ValidationMessageFor(m => m.OrderIndex)</td>
        </tr>
         <tr>
            <td>@Html.LabelFor(model => model.IsAppFeatures)</td>
            <td>@Html.CheckBoxFor(model => model.IsAppFeatures)</td>
        </tr>
        <tr>
            <td colspan="2"></td>
        </tr>
         <tr>
            <td>@Html.LabelFor(model => model.IsAppHomeModule)&nbsp;@Html.CheckBoxFor(model => model.IsAppHomeModule)</td>
            <td>@Html.LabelFor(model => model.IsAppShortcutMenu)&nbsp;@Html.CheckBoxFor(model => model.IsAppShortcutMenu)</td>
        </tr>
        <tr>
            <td colspan="2"></td>
        </tr>
         <tr>
            <td>@Html.LabelFor(model => model.FeaturesCode)</td>
            <td>@Html.EditorFor(model => model.FeaturesCode)</td>
        </tr>
        <tr>
            <td colspan="2">@Html.ValidationMessageFor(m => m.FeaturesCode)</td>
        </tr>
        <tr>
            <td>@Html.LabelFor(model => model.Description)：</td>
            <td>@Html.TextAreaFor(model => model.Description, new { @class = "fixTextArea" })</td>
        </tr>
        <tr>
            <td colspan="2">@Html.ValidationMessageFor(model => model.Description)</td>
        </tr>
        <tr>
            <td>
                <button class="btn btn-primary" title="@UIText.SaveButton"><span class="glyphicon glyphicon-ok"></span></button>
            </td>
            <td></td>
        </tr>
    </table>
}


<script>
    var $frmEditFunctionInfo = $("#frmEditFunctionInfo");
    $frmEditFunctionInfo.fixUnobtrusiveValidation();
    $frmEditFunctionInfo.find("input:not(:submit,:checkbox),textarea,select").addClass("form-control");


    var $ddlEditAreas = $("#ddlEditAreas");
    var $ddlEditControllers = $("#ddlEditControllers");
    var $ddlEditParentFunction = $("#ddlEditParentFunction");
    var $ddlEditActions = $("#ddlEditActions");
    var $chkIsTopFunction = $("#IsTopFunction");
    var $hidParentID = $("#hidParentID");
    var $chkFunIsMenu = $("#FunctionIsMenu");

    if ($chkFunIsMenu.prop("checked"))
    {
        $ddlEditAreas.prop("disabled", true);
        $ddlEditControllers.prop("disabled", true);
        $ddlEditActions.prop("disabled", true);
    }


    $chkFunIsMenu.change(function ()
    {
        var _checked = $chkFunIsMenu.prop("checked");
        $ddlEditAreas.prop("disabled", _checked);
        $ddlEditControllers.prop("disabled", _checked);
        $ddlEditActions.prop("disabled", _checked);
    });

    $ddlEditParentFunction.find("option").each(function (i)
    {
        var _$currentObj = $(this);
        if (_$currentObj.val() == '@Model.ParentID')
        {
            _$currentObj.attr("selected", "selected");
            return;
        }
    });


    $ddlEditParentFunction.editableSelect({ effects: 'fade' }).on('select.editable-select', function (e, li)
    {
        $hidParentID.val(li.val());
    });







    var setEditPageDropdown = function ()
    {
        $ddlEditAreas.change(function ()
        {
            var _areaID = $.trim($ddlEditAreas.find("option:selected").val());
            $.get("@Url.Content("~/Admin/Ctr/GetControllerDDLByAreaID")", { areaID: _areaID }, function (result)
            {
                $ddlEditControllers.empty();
                $.each(result, function (i, item)
                {
                    $ddlEditControllers.append($("<option></option>").text(item.ControllerName).val(item.ID));
                });
                changeActions();
            });
        });


        $ddlEditControllers.change(function ()
        {
            changeActions();
        });
    }

    var changeActions = function ()
    {
        var _controllerID = $.trim($ddlEditControllers.find("option:selected").val());
        $.get("@Url.Content("~/Admin/Action/GetActionDDLByControllerID")", { controllerID: _controllerID }, function (result)
        {
            $ddlEditActions.empty();
            //$ddlEditActions.append($("<option></option>").text("").val("-1"));
            $.each(result, function (i, item)
            {
                $ddlEditActions.append($("<option></option>").text(item.ActionName).val(item.ID));
            });
        });
    }

    setEditPageDropdown();
    $("#ddlEditParentFunction").prop("disabled", $chkIsTopFunction.prop("checked"));
    $chkIsTopFunction.on("click", function ()
    {
        $("#ddlEditParentFunction").prop("disabled", $(this).prop("checked"));
    });

</script>
